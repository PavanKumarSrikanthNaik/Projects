
led.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000080  00800100  00001104  00001198  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001104  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000042  00800180  00800180  00001218  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001218  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000180  00000000  00000000  00001248  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00003505  00000000  00000000  000013c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000002e6  00000000  00000000  000048cd  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000abc  00000000  00000000  00004bb3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000003e8  00000000  00000000  00005670  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000440  00000000  00000000  00005a58  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000022fd  00000000  00000000  00005e98  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000170  00000000  00000000  00008195  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 76 00 	jmp	0xec	; 0xec <__ctors_end>
       4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
       8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
       c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      10:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      14:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      18:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      1c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      20:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      24:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      28:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      2c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      30:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      34:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      38:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      3c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      40:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      44:	0c 94 49 01 	jmp	0x292	; 0x292 <__vector_17>
      48:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      4c:	0c 94 18 08 	jmp	0x1030	; 0x1030 <__vector_19>
      50:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      54:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      58:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      5c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      60:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      64:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      68:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      6c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      70:	bb 02       	muls	r27, r27
      72:	cd 02       	muls	r28, r29
      74:	d6 02       	muls	r29, r22
      76:	e8 02       	muls	r30, r24
      78:	fa 02       	muls	r31, r26
      7a:	04 03       	mulsu	r16, r20
      7c:	15 03       	mulsu	r17, r21
      7e:	27 03       	mulsu	r18, r23
      80:	38 03       	fmul	r19, r16
      82:	4a 03       	fmul	r20, r18
      84:	5c 03       	fmul	r21, r20
      86:	6f 03       	fmul	r22, r23
      88:	ac 03       	fmulsu	r18, r20
      8a:	be 03       	fmulsu	r19, r22
      8c:	c8 03       	fmulsu	r20, r16
      8e:	da 03       	fmulsu	r21, r18
      90:	ec 03       	fmulsu	r22, r20
      92:	f5 03       	fmuls	r23, r21
      94:	06 04       	cpc	r0, r6
      96:	18 04       	cpc	r1, r8
      98:	2b 04       	cpc	r2, r11
      9a:	3d 04       	cpc	r3, r13
      9c:	4f 04       	cpc	r4, r15
      9e:	60 04       	cpc	r6, r0
      a0:	9d 04       	cpc	r9, r13
      a2:	a7 04       	cpc	r10, r7
      a4:	ae 04       	cpc	r10, r14
      a6:	b8 04       	cpc	r11, r8
      a8:	bf 04       	cpc	r11, r15
      aa:	c9 04       	cpc	r12, r9
      ac:	d0 04       	cpc	r13, r0
      ae:	da 04       	cpc	r13, r10
      b0:	e0 04       	cpc	r14, r0
      b2:	ea 04       	cpc	r14, r10
      b4:	f1 04       	cpc	r15, r1
      b6:	fb 04       	cpc	r15, r11
      b8:	02 05       	cpc	r16, r2
      ba:	3d 05       	cpc	r19, r13
      bc:	47 05       	cpc	r20, r7
      be:	4e 05       	cpc	r20, r14
      c0:	58 05       	cpc	r21, r8
      c2:	5f 05       	cpc	r21, r15
      c4:	69 05       	cpc	r22, r9
      c6:	70 05       	cpc	r23, r0
      c8:	7a 05       	cpc	r23, r10
      ca:	80 05       	cpc	r24, r0
      cc:	8a 05       	cpc	r24, r10
      ce:	91 05       	cpc	r25, r1
      d0:	9b 05       	cpc	r25, r11
      d2:	a2 05       	cpc	r26, r2
      d4:	de 05       	cpc	r29, r14
      d6:	e8 05       	cpc	r30, r8
      d8:	ef 05       	cpc	r30, r15
      da:	f9 05       	cpc	r31, r9
      dc:	00 06       	cpc	r0, r16
      de:	0a 06       	cpc	r0, r26
      e0:	11 06       	cpc	r1, r17
      e2:	1b 06       	cpc	r1, r27
      e4:	22 06       	cpc	r2, r18
      e6:	2c 06       	cpc	r2, r28
      e8:	32 06       	cpc	r3, r18
      ea:	3c 06       	cpc	r3, r28

000000ec <__ctors_end>:
      ec:	11 24       	eor	r1, r1
      ee:	1f be       	out	0x3f, r1	; 63
      f0:	cf ef       	ldi	r28, 0xFF	; 255
      f2:	d4 e0       	ldi	r29, 0x04	; 4
      f4:	de bf       	out	0x3e, r29	; 62
      f6:	cd bf       	out	0x3d, r28	; 61

000000f8 <__do_copy_data>:
      f8:	11 e0       	ldi	r17, 0x01	; 1
      fa:	a0 e0       	ldi	r26, 0x00	; 0
      fc:	b1 e0       	ldi	r27, 0x01	; 1
      fe:	e4 e0       	ldi	r30, 0x04	; 4
     100:	f1 e1       	ldi	r31, 0x11	; 17
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x10>
     104:	05 90       	lpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a0 38       	cpi	r26, 0x80	; 128
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0xc>

0000010e <__do_clear_bss>:
     10e:	21 e0       	ldi	r18, 0x01	; 1
     110:	a0 e8       	ldi	r26, 0x80	; 128
     112:	b1 e0       	ldi	r27, 0x01	; 1
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	a2 3c       	cpi	r26, 0xC2	; 194
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	0e 94 88 06 	call	0xd10	; 0xd10 <main>
     122:	0c 94 80 08 	jmp	0x1100	; 0x1100 <_exit>

00000126 <__bad_interrupt>:
     126:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000012a <Lcd4_Command>:
  	}
}
void Lcd4_Command(unsigned char com)
{
	Lcd_com1 = com & 0xf0;
	Lcd_com2 = com & 0x0f;
     12a:	98 2f       	mov	r25, r24
     12c:	9f 70       	andi	r25, 0x0F	; 15
     12e:	90 93 83 01 	sts	0x0183, r25
	Lcd_com1 = Lcd_com1>>4;
     132:	82 95       	swap	r24
     134:	8f 70       	andi	r24, 0x0F	; 15
     136:	80 93 9d 01 	sts	0x019D, r24

//	disable;
	          		//sel command reg
	Lcd_Temp = Data_Port & 0xf0;        
     13a:	9b b3       	in	r25, 0x1b	; 27
     13c:	90 7f       	andi	r25, 0xF0	; 240
     13e:	90 93 80 01 	sts	0x0180, r25
	Data_Port=Lcd_Temp | Lcd_com1; 
     142:	98 2b       	or	r25, r24
     144:	9b bb       	out	0x1b, r25	; 27
	cmd_mode;		//send com to po
     146:	dd 98       	cbi	0x1b, 5	; 27
	enable;         //clock
     148:	dc 9a       	sbi	0x1b, 4	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     14a:	8f ec       	ldi	r24, 0xCF	; 207
     14c:	97 e0       	ldi	r25, 0x07	; 7
     14e:	01 97       	sbiw	r24, 0x01	; 1
     150:	f1 f7       	brne	.-4      	; 0x14e <Lcd4_Command+0x24>
     152:	00 c0       	rjmp	.+0      	; 0x154 <Lcd4_Command+0x2a>
     154:	00 00       	nop
	_delay_ms(1);
	disable;
     156:	dc 98       	cbi	0x1b, 4	; 27
     158:	8f ec       	ldi	r24, 0xCF	; 207
     15a:	97 e0       	ldi	r25, 0x07	; 7
     15c:	01 97       	sbiw	r24, 0x01	; 1
     15e:	f1 f7       	brne	.-4      	; 0x15c <Lcd4_Command+0x32>
     160:	00 c0       	rjmp	.+0      	; 0x162 <Lcd4_Command+0x38>
     162:	00 00       	nop
	_delay_ms(1);
	Lcd_Temp = Data_Port & 0xf0;        
     164:	8b b3       	in	r24, 0x1b	; 27
     166:	80 7f       	andi	r24, 0xF0	; 240
     168:	80 93 80 01 	sts	0x0180, r24
	Data_Port=Lcd_Temp | Lcd_com2;
     16c:	90 91 83 01 	lds	r25, 0x0183
     170:	89 2b       	or	r24, r25
     172:	8b bb       	out	0x1b, r24	; 27
	cmd_mode;       //send com to po
     174:	dd 98       	cbi	0x1b, 5	; 27
	enable;         //clock
     176:	dc 9a       	sbi	0x1b, 4	; 27
     178:	8f ec       	ldi	r24, 0xCF	; 207
     17a:	97 e0       	ldi	r25, 0x07	; 7
     17c:	01 97       	sbiw	r24, 0x01	; 1
     17e:	f1 f7       	brne	.-4      	; 0x17c <Lcd4_Command+0x52>
     180:	00 c0       	rjmp	.+0      	; 0x182 <Lcd4_Command+0x58>
     182:	00 00       	nop
	_delay_ms(1);
	disable;
     184:	dc 98       	cbi	0x1b, 4	; 27
     186:	8f ec       	ldi	r24, 0xCF	; 207
     188:	97 e0       	ldi	r25, 0x07	; 7
     18a:	01 97       	sbiw	r24, 0x01	; 1
     18c:	f1 f7       	brne	.-4      	; 0x18a <Lcd4_Command+0x60>
     18e:	00 c0       	rjmp	.+0      	; 0x190 <Lcd4_Command+0x66>
     190:	00 00       	nop
     192:	08 95       	ret

00000194 <Lcd4_Init>:

unsigned char Lcd_com1,Lcd_com2,Lcd_Temp;

void Lcd4_Init()
{
	DDRA=0x3f;
     194:	8f e3       	ldi	r24, 0x3F	; 63
     196:	8a bb       	out	0x1a, r24	; 26
	Lcd4_Command(0x38);		
     198:	88 e3       	ldi	r24, 0x38	; 56
     19a:	0e 94 95 00 	call	0x12a	; 0x12a <Lcd4_Command>
	Lcd4_Command(0x02);		//return home
     19e:	82 e0       	ldi	r24, 0x02	; 2
     1a0:	0e 94 95 00 	call	0x12a	; 0x12a <Lcd4_Command>
	Lcd4_Command(0x28);		//to select function set	
     1a4:	88 e2       	ldi	r24, 0x28	; 40
     1a6:	0e 94 95 00 	call	0x12a	; 0x12a <Lcd4_Command>
	Lcd4_Command(0x06);		//entry mode set
     1aa:	86 e0       	ldi	r24, 0x06	; 6
     1ac:	0e 94 95 00 	call	0x12a	; 0x12a <Lcd4_Command>
	Lcd4_Command(0x0c);		//display on	
     1b0:	8c e0       	ldi	r24, 0x0C	; 12
     1b2:	0e 94 95 00 	call	0x12a	; 0x12a <Lcd4_Command>
	Lcd4_Command(0x01);		//clear display
     1b6:	81 e0       	ldi	r24, 0x01	; 1
     1b8:	0e 94 95 00 	call	0x12a	; 0x12a <Lcd4_Command>
     1bc:	08 95       	ret

000001be <Lcd4_Write>:
	_delay_ms(1);
	disable;
	_delay_ms(1);
}
void Lcd4_Write(unsigned char com,unsigned char dat)
{
     1be:	cf 93       	push	r28
     1c0:	c6 2f       	mov	r28, r22
	Lcd4_Command(com);
     1c2:	0e 94 95 00 	call	0x12a	; 0x12a <Lcd4_Command>
     1c6:	8f ec       	ldi	r24, 0xCF	; 207
     1c8:	97 e0       	ldi	r25, 0x07	; 7
     1ca:	01 97       	sbiw	r24, 0x01	; 1
     1cc:	f1 f7       	brne	.-4      	; 0x1ca <Lcd4_Write+0xc>
     1ce:	00 c0       	rjmp	.+0      	; 0x1d0 <Lcd4_Write+0x12>
     1d0:	00 00       	nop
	_delay_ms(1);
	Lcd_com1 = dat & 0xf0;
	Lcd_com2 = dat & 0x0f;
     1d2:	8c 2f       	mov	r24, r28
     1d4:	8f 70       	andi	r24, 0x0F	; 15
     1d6:	80 93 83 01 	sts	0x0183, r24
	Lcd_com1 = Lcd_com1>>4;	
     1da:	c2 95       	swap	r28
     1dc:	cf 70       	andi	r28, 0x0F	; 15
     1de:	c0 93 9d 01 	sts	0x019D, r28

//	disable;
	        					//sel data reg
	Lcd_Temp = Data_Port & 0xf0;        
     1e2:	8b b3       	in	r24, 0x1b	; 27
     1e4:	80 7f       	andi	r24, 0xF0	; 240
     1e6:	80 93 80 01 	sts	0x0180, r24
	Data_Port=Lcd_Temp | Lcd_com1;  
     1ea:	c8 2b       	or	r28, r24
     1ec:	cb bb       	out	0x1b, r28	; 27
	data_mode;        			//send com to po
     1ee:	dd 9a       	sbi	0x1b, 5	; 27
	enable;            				//clock
     1f0:	dc 9a       	sbi	0x1b, 4	; 27
     1f2:	8f ec       	ldi	r24, 0xCF	; 207
     1f4:	97 e0       	ldi	r25, 0x07	; 7
     1f6:	01 97       	sbiw	r24, 0x01	; 1
     1f8:	f1 f7       	brne	.-4      	; 0x1f6 <Lcd4_Write+0x38>
     1fa:	00 c0       	rjmp	.+0      	; 0x1fc <Lcd4_Write+0x3e>
     1fc:	00 00       	nop
	_delay_ms(1);
	disable; 
     1fe:	dc 98       	cbi	0x1b, 4	; 27
     200:	8f ec       	ldi	r24, 0xCF	; 207
     202:	97 e0       	ldi	r25, 0x07	; 7
     204:	01 97       	sbiw	r24, 0x01	; 1
     206:	f1 f7       	brne	.-4      	; 0x204 <Lcd4_Write+0x46>
     208:	00 c0       	rjmp	.+0      	; 0x20a <Lcd4_Write+0x4c>
     20a:	00 00       	nop
	_delay_ms(1);       					//sel data reg
	Lcd_Temp = Data_Port & 0xf0;        
     20c:	8b b3       	in	r24, 0x1b	; 27
     20e:	80 7f       	andi	r24, 0xF0	; 240
     210:	80 93 80 01 	sts	0x0180, r24
	Data_Port=Lcd_Temp | Lcd_com2; 
     214:	90 91 83 01 	lds	r25, 0x0183
     218:	89 2b       	or	r24, r25
     21a:	8b bb       	out	0x1b, r24	; 27
	data_mode;         			//send com to po
     21c:	dd 9a       	sbi	0x1b, 5	; 27
	enable;            				//clock
     21e:	dc 9a       	sbi	0x1b, 4	; 27
     220:	8f ec       	ldi	r24, 0xCF	; 207
     222:	97 e0       	ldi	r25, 0x07	; 7
     224:	01 97       	sbiw	r24, 0x01	; 1
     226:	f1 f7       	brne	.-4      	; 0x224 <Lcd4_Write+0x66>
     228:	00 c0       	rjmp	.+0      	; 0x22a <Lcd4_Write+0x6c>
     22a:	00 00       	nop
	_delay_ms(1);
	disable;
     22c:	dc 98       	cbi	0x1b, 4	; 27
	cmd_mode; 
     22e:	dd 98       	cbi	0x1b, 5	; 27
     230:	8f ec       	ldi	r24, 0xCF	; 207
     232:	97 e0       	ldi	r25, 0x07	; 7
     234:	01 97       	sbiw	r24, 0x01	; 1
     236:	f1 f7       	brne	.-4      	; 0x234 <Lcd4_Write+0x76>
     238:	00 c0       	rjmp	.+0      	; 0x23a <Lcd4_Write+0x7c>
     23a:	00 00       	nop
	_delay_ms(1);
}
     23c:	cf 91       	pop	r28
     23e:	08 95       	ret

00000240 <Lcd4_Display>:
	Lcd4_Command(0x06);		//entry mode set
	Lcd4_Command(0x0c);		//display on	
	Lcd4_Command(0x01);		//clear display
}
void Lcd4_Display(unsigned char com,const  char *word,unsigned int n)
{
     240:	ef 92       	push	r14
     242:	ff 92       	push	r15
     244:	0f 93       	push	r16
     246:	1f 93       	push	r17
     248:	cf 93       	push	r28
     24a:	df 93       	push	r29
     24c:	e8 2e       	mov	r14, r24
     24e:	8b 01       	movw	r16, r22
     250:	ea 01       	movw	r28, r20
	unsigned char Lcd_i;
	for(Lcd_i=0;Lcd_i<n;Lcd_i++)
     252:	20 97       	sbiw	r28, 0x00	; 0
     254:	89 f0       	breq	.+34     	; 0x278 <Lcd4_Display+0x38>
     256:	20 e0       	ldi	r18, 0x00	; 0
     258:	30 e0       	ldi	r19, 0x00	; 0
     25a:	f1 2c       	mov	r15, r1
	{ 
		Lcd4_Write(com+Lcd_i,word[Lcd_i]);
     25c:	f8 01       	movw	r30, r16
     25e:	e2 0f       	add	r30, r18
     260:	f3 1f       	adc	r31, r19
     262:	60 81       	ld	r22, Z
     264:	8f 2d       	mov	r24, r15
     266:	8e 0d       	add	r24, r14
     268:	0e 94 df 00 	call	0x1be	; 0x1be <Lcd4_Write>
	Lcd4_Command(0x01);		//clear display
}
void Lcd4_Display(unsigned char com,const  char *word,unsigned int n)
{
	unsigned char Lcd_i;
	for(Lcd_i=0;Lcd_i<n;Lcd_i++)
     26c:	f3 94       	inc	r15
     26e:	2f 2d       	mov	r18, r15
     270:	30 e0       	ldi	r19, 0x00	; 0
     272:	2c 17       	cp	r18, r28
     274:	3d 07       	cpc	r19, r29
     276:	90 f3       	brcs	.-28     	; 0x25c <Lcd4_Display+0x1c>
	{ 
		Lcd4_Write(com+Lcd_i,word[Lcd_i]);
  	}
}
     278:	df 91       	pop	r29
     27a:	cf 91       	pop	r28
     27c:	1f 91       	pop	r17
     27e:	0f 91       	pop	r16
     280:	ff 90       	pop	r15
     282:	ef 90       	pop	r14
     284:	08 95       	ret

00000286 <timer_init>:
unsigned char step1,step2,step3,step4,step5,step6,step7,step8,step9;
unsigned char step10,step11,step12,step13,step14,step15,step16,step17,step18;

void timer_init()
{
	TCCR0 = (1<<CS01) ;// start timer0 with /1024 prescaler
     286:	82 e0       	ldi	r24, 0x02	; 2
     288:	83 bf       	out	0x33, r24	; 51
	TCNT0=0x9D;// set timer0 counter initial value 
     28a:	9d e9       	ldi	r25, 0x9D	; 157
     28c:	92 bf       	out	0x32, r25	; 50
	
	TIMSK=(1<<TOIE0);
     28e:	89 bf       	out	0x39, r24	; 57
     290:	08 95       	ret

00000292 <__vector_17>:
	
	
}

ISR(TIMER0_OVF_vect)
{
     292:	1f 92       	push	r1
     294:	0f 92       	push	r0
     296:	0f b6       	in	r0, 0x3f	; 63
     298:	0f 92       	push	r0
     29a:	11 24       	eor	r1, r1
     29c:	2f 93       	push	r18
     29e:	3f 93       	push	r19
     2a0:	8f 93       	push	r24
     2a2:	9f 93       	push	r25
	TCNT0=0x9D;		//EVERY 100us
     2a4:	8d e9       	ldi	r24, 0x9D	; 157
     2a6:	82 bf       	out	0x32, r24	; 50
	
	if(delay0<step1) PORTB |= (1<<0);
     2a8:	20 91 99 01 	lds	r18, 0x0199
     2ac:	30 e0       	ldi	r19, 0x00	; 0
     2ae:	80 91 9e 01 	lds	r24, 0x019E
     2b2:	90 91 9f 01 	lds	r25, 0x019F
     2b6:	82 17       	cp	r24, r18
     2b8:	93 07       	cpc	r25, r19
     2ba:	10 f4       	brcc	.+4      	; 0x2c0 <__vector_17+0x2e>
     2bc:	c0 9a       	sbi	0x18, 0	; 24
     2be:	01 c0       	rjmp	.+2      	; 0x2c2 <__vector_17+0x30>
	else PORTB &= ~(1<<0);
     2c0:	c0 98       	cbi	0x18, 0	; 24
	
	if(delay0<step2) PORTB |= (1<<1);
     2c2:	20 91 a2 01 	lds	r18, 0x01A2
     2c6:	30 e0       	ldi	r19, 0x00	; 0
     2c8:	80 91 9e 01 	lds	r24, 0x019E
     2cc:	90 91 9f 01 	lds	r25, 0x019F
     2d0:	82 17       	cp	r24, r18
     2d2:	93 07       	cpc	r25, r19
     2d4:	10 f4       	brcc	.+4      	; 0x2da <__vector_17+0x48>
     2d6:	c1 9a       	sbi	0x18, 1	; 24
     2d8:	01 c0       	rjmp	.+2      	; 0x2dc <__vector_17+0x4a>
	else PORTB &= ~(1<<1);
     2da:	c1 98       	cbi	0x18, 1	; 24
	
	if(delay0<step3) PORTB |= (1<<2);
     2dc:	20 91 88 01 	lds	r18, 0x0188
     2e0:	30 e0       	ldi	r19, 0x00	; 0
     2e2:	80 91 9e 01 	lds	r24, 0x019E
     2e6:	90 91 9f 01 	lds	r25, 0x019F
     2ea:	82 17       	cp	r24, r18
     2ec:	93 07       	cpc	r25, r19
     2ee:	10 f4       	brcc	.+4      	; 0x2f4 <__vector_17+0x62>
     2f0:	c2 9a       	sbi	0x18, 2	; 24
     2f2:	01 c0       	rjmp	.+2      	; 0x2f6 <__vector_17+0x64>
	else PORTB &= ~(1<<2);
     2f4:	c2 98       	cbi	0x18, 2	; 24
	
	if(delay0<step4) PORTB |= (1<<3);
     2f6:	20 91 8d 01 	lds	r18, 0x018D
     2fa:	30 e0       	ldi	r19, 0x00	; 0
     2fc:	80 91 9e 01 	lds	r24, 0x019E
     300:	90 91 9f 01 	lds	r25, 0x019F
     304:	82 17       	cp	r24, r18
     306:	93 07       	cpc	r25, r19
     308:	10 f4       	brcc	.+4      	; 0x30e <__vector_17+0x7c>
     30a:	c3 9a       	sbi	0x18, 3	; 24
     30c:	01 c0       	rjmp	.+2      	; 0x310 <__vector_17+0x7e>
	else PORTB &= ~(1<<3);
     30e:	c3 98       	cbi	0x18, 3	; 24
	
	if(delay0<step5) PORTB |= (1<<4);
     310:	20 91 81 01 	lds	r18, 0x0181
     314:	30 e0       	ldi	r19, 0x00	; 0
     316:	80 91 9e 01 	lds	r24, 0x019E
     31a:	90 91 9f 01 	lds	r25, 0x019F
     31e:	82 17       	cp	r24, r18
     320:	93 07       	cpc	r25, r19
     322:	10 f4       	brcc	.+4      	; 0x328 <__vector_17+0x96>
     324:	c4 9a       	sbi	0x18, 4	; 24
     326:	01 c0       	rjmp	.+2      	; 0x32a <__vector_17+0x98>
	else PORTB &= ~(1<<4);
     328:	c4 98       	cbi	0x18, 4	; 24
	
	if(delay0<step6) PORTB |= (1<<5);
     32a:	20 91 89 01 	lds	r18, 0x0189
     32e:	30 e0       	ldi	r19, 0x00	; 0
     330:	80 91 9e 01 	lds	r24, 0x019E
     334:	90 91 9f 01 	lds	r25, 0x019F
     338:	82 17       	cp	r24, r18
     33a:	93 07       	cpc	r25, r19
     33c:	10 f4       	brcc	.+4      	; 0x342 <__vector_17+0xb0>
     33e:	c5 9a       	sbi	0x18, 5	; 24
     340:	01 c0       	rjmp	.+2      	; 0x344 <__vector_17+0xb2>
	else PORTB &= ~(1<<5);
     342:	c5 98       	cbi	0x18, 5	; 24
	
	if(delay0<step7) PORTB |= (1<<6);
     344:	20 91 a1 01 	lds	r18, 0x01A1
     348:	30 e0       	ldi	r19, 0x00	; 0
     34a:	80 91 9e 01 	lds	r24, 0x019E
     34e:	90 91 9f 01 	lds	r25, 0x019F
     352:	82 17       	cp	r24, r18
     354:	93 07       	cpc	r25, r19
     356:	10 f4       	brcc	.+4      	; 0x35c <__vector_17+0xca>
     358:	c6 9a       	sbi	0x18, 6	; 24
     35a:	01 c0       	rjmp	.+2      	; 0x35e <__vector_17+0xcc>
	else PORTB &= ~(1<<6);
     35c:	c6 98       	cbi	0x18, 6	; 24
	
	if(delay0<step8) PORTB |= (1<<7);
     35e:	20 91 8a 01 	lds	r18, 0x018A
     362:	30 e0       	ldi	r19, 0x00	; 0
     364:	80 91 9e 01 	lds	r24, 0x019E
     368:	90 91 9f 01 	lds	r25, 0x019F
     36c:	82 17       	cp	r24, r18
     36e:	93 07       	cpc	r25, r19
     370:	10 f4       	brcc	.+4      	; 0x376 <__vector_17+0xe4>
     372:	c7 9a       	sbi	0x18, 7	; 24
     374:	01 c0       	rjmp	.+2      	; 0x378 <__vector_17+0xe6>
	else PORTB &= ~(1<<7);
     376:	c7 98       	cbi	0x18, 7	; 24

//
	
	if(delay0<step9) PORTD |= (1<<2);
     378:	20 91 a0 01 	lds	r18, 0x01A0
     37c:	30 e0       	ldi	r19, 0x00	; 0
     37e:	80 91 9e 01 	lds	r24, 0x019E
     382:	90 91 9f 01 	lds	r25, 0x019F
     386:	82 17       	cp	r24, r18
     388:	93 07       	cpc	r25, r19
     38a:	10 f4       	brcc	.+4      	; 0x390 <__vector_17+0xfe>
     38c:	92 9a       	sbi	0x12, 2	; 18
     38e:	01 c0       	rjmp	.+2      	; 0x392 <__vector_17+0x100>
	else PORTD &= ~(1<<2);
     390:	92 98       	cbi	0x12, 2	; 18
	
	if(delay0<step10) PORTD |= (1<<3);
     392:	20 91 87 01 	lds	r18, 0x0187
     396:	30 e0       	ldi	r19, 0x00	; 0
     398:	80 91 9e 01 	lds	r24, 0x019E
     39c:	90 91 9f 01 	lds	r25, 0x019F
     3a0:	82 17       	cp	r24, r18
     3a2:	93 07       	cpc	r25, r19
     3a4:	10 f4       	brcc	.+4      	; 0x3aa <__vector_17+0x118>
     3a6:	93 9a       	sbi	0x12, 3	; 18
     3a8:	01 c0       	rjmp	.+2      	; 0x3ac <__vector_17+0x11a>
	else PORTD &= ~(1<<3);
     3aa:	93 98       	cbi	0x12, 3	; 18

	if(delay0<step11) PORTD |= (1<<4);
     3ac:	20 91 92 01 	lds	r18, 0x0192
     3b0:	30 e0       	ldi	r19, 0x00	; 0
     3b2:	80 91 9e 01 	lds	r24, 0x019E
     3b6:	90 91 9f 01 	lds	r25, 0x019F
     3ba:	82 17       	cp	r24, r18
     3bc:	93 07       	cpc	r25, r19
     3be:	10 f4       	brcc	.+4      	; 0x3c4 <__vector_17+0x132>
     3c0:	94 9a       	sbi	0x12, 4	; 18
     3c2:	01 c0       	rjmp	.+2      	; 0x3c6 <__vector_17+0x134>
	else PORTD &= ~(1<<4);
     3c4:	94 98       	cbi	0x12, 4	; 18
	
	if(delay0<step12) PORTD |= (1<<5);
     3c6:	20 91 a7 01 	lds	r18, 0x01A7
     3ca:	30 e0       	ldi	r19, 0x00	; 0
     3cc:	80 91 9e 01 	lds	r24, 0x019E
     3d0:	90 91 9f 01 	lds	r25, 0x019F
     3d4:	82 17       	cp	r24, r18
     3d6:	93 07       	cpc	r25, r19
     3d8:	10 f4       	brcc	.+4      	; 0x3de <__vector_17+0x14c>
     3da:	95 9a       	sbi	0x12, 5	; 18
     3dc:	01 c0       	rjmp	.+2      	; 0x3e0 <__vector_17+0x14e>
	else PORTD &= ~(1<<5);
     3de:	95 98       	cbi	0x12, 5	; 18
	
	if(delay0<step13) PORTD |= (1<<6);
     3e0:	20 91 91 01 	lds	r18, 0x0191
     3e4:	30 e0       	ldi	r19, 0x00	; 0
     3e6:	80 91 9e 01 	lds	r24, 0x019E
     3ea:	90 91 9f 01 	lds	r25, 0x019F
     3ee:	82 17       	cp	r24, r18
     3f0:	93 07       	cpc	r25, r19
     3f2:	10 f4       	brcc	.+4      	; 0x3f8 <__vector_17+0x166>
     3f4:	96 9a       	sbi	0x12, 6	; 18
     3f6:	01 c0       	rjmp	.+2      	; 0x3fa <__vector_17+0x168>
	else PORTD &= ~(1<<6);
     3f8:	96 98       	cbi	0x12, 6	; 18
	
	if(delay0<step14) PORTD |= (1<<7);
     3fa:	20 91 a3 01 	lds	r18, 0x01A3
     3fe:	30 e0       	ldi	r19, 0x00	; 0
     400:	80 91 9e 01 	lds	r24, 0x019E
     404:	90 91 9f 01 	lds	r25, 0x019F
     408:	82 17       	cp	r24, r18
     40a:	93 07       	cpc	r25, r19
     40c:	10 f4       	brcc	.+4      	; 0x412 <__vector_17+0x180>
     40e:	97 9a       	sbi	0x12, 7	; 18
     410:	01 c0       	rjmp	.+2      	; 0x414 <__vector_17+0x182>
	else PORTD &= ~(1<<7);
     412:	97 98       	cbi	0x12, 7	; 18

//

	if(delay0<step15) PORTC |= (1<<0);
     414:	20 91 c0 01 	lds	r18, 0x01C0
     418:	30 e0       	ldi	r19, 0x00	; 0
     41a:	80 91 9e 01 	lds	r24, 0x019E
     41e:	90 91 9f 01 	lds	r25, 0x019F
     422:	82 17       	cp	r24, r18
     424:	93 07       	cpc	r25, r19
     426:	10 f4       	brcc	.+4      	; 0x42c <__vector_17+0x19a>
     428:	a8 9a       	sbi	0x15, 0	; 21
     42a:	01 c0       	rjmp	.+2      	; 0x42e <__vector_17+0x19c>
	else PORTC &= ~(1<<0);
     42c:	a8 98       	cbi	0x15, 0	; 21
	
	if(delay0<step16) PORTC |= (1<<1);
     42e:	20 91 9a 01 	lds	r18, 0x019A
     432:	30 e0       	ldi	r19, 0x00	; 0
     434:	80 91 9e 01 	lds	r24, 0x019E
     438:	90 91 9f 01 	lds	r25, 0x019F
     43c:	82 17       	cp	r24, r18
     43e:	93 07       	cpc	r25, r19
     440:	10 f4       	brcc	.+4      	; 0x446 <__vector_17+0x1b4>
     442:	a9 9a       	sbi	0x15, 1	; 21
     444:	01 c0       	rjmp	.+2      	; 0x448 <__vector_17+0x1b6>
	else PORTC &= ~(1<<1);
     446:	a9 98       	cbi	0x15, 1	; 21
	
	if(delay0<step17) PORTC |= (1<<2);
     448:	20 91 a4 01 	lds	r18, 0x01A4
     44c:	30 e0       	ldi	r19, 0x00	; 0
     44e:	80 91 9e 01 	lds	r24, 0x019E
     452:	90 91 9f 01 	lds	r25, 0x019F
     456:	82 17       	cp	r24, r18
     458:	93 07       	cpc	r25, r19
     45a:	10 f4       	brcc	.+4      	; 0x460 <__vector_17+0x1ce>
     45c:	aa 9a       	sbi	0x15, 2	; 21
     45e:	01 c0       	rjmp	.+2      	; 0x462 <__vector_17+0x1d0>
	else PORTC &= ~(1<<2);
     460:	aa 98       	cbi	0x15, 2	; 21
	
	if(delay0<step18) PORTC |= (1<<3);
     462:	20 91 82 01 	lds	r18, 0x0182
     466:	30 e0       	ldi	r19, 0x00	; 0
     468:	80 91 9e 01 	lds	r24, 0x019E
     46c:	90 91 9f 01 	lds	r25, 0x019F
     470:	82 17       	cp	r24, r18
     472:	93 07       	cpc	r25, r19
     474:	10 f4       	brcc	.+4      	; 0x47a <__vector_17+0x1e8>
     476:	ab 9a       	sbi	0x15, 3	; 21
     478:	01 c0       	rjmp	.+2      	; 0x47c <__vector_17+0x1ea>
	else PORTC &= ~(1<<3);
     47a:	ab 98       	cbi	0x15, 3	; 21
//

	delay0++;dd++;
     47c:	80 91 9e 01 	lds	r24, 0x019E
     480:	90 91 9f 01 	lds	r25, 0x019F
     484:	01 96       	adiw	r24, 0x01	; 1
     486:	90 93 9f 01 	sts	0x019F, r25
     48a:	80 93 9e 01 	sts	0x019E, r24
     48e:	20 91 95 01 	lds	r18, 0x0195
     492:	30 91 96 01 	lds	r19, 0x0196
     496:	2f 5f       	subi	r18, 0xFF	; 255
     498:	3f 4f       	sbci	r19, 0xFF	; 255
     49a:	30 93 96 01 	sts	0x0196, r19
     49e:	20 93 95 01 	sts	0x0195, r18
	
	if(delay0>200)	delay0=0;//20ms	
     4a2:	89 3c       	cpi	r24, 0xC9	; 201
     4a4:	91 05       	cpc	r25, r1
     4a6:	20 f0       	brcs	.+8      	; 0x4b0 <__vector_17+0x21e>
     4a8:	10 92 9f 01 	sts	0x019F, r1
     4ac:	10 92 9e 01 	sts	0x019E, r1
}
     4b0:	9f 91       	pop	r25
     4b2:	8f 91       	pop	r24
     4b4:	3f 91       	pop	r19
     4b6:	2f 91       	pop	r18
     4b8:	0f 90       	pop	r0
     4ba:	0f be       	out	0x3f, r0	; 63
     4bc:	0f 90       	pop	r0
     4be:	1f 90       	pop	r1
     4c0:	18 95       	reti

000004c2 <Serial0_Init>:
void Serial0_Decimal3(unsigned char );
void Receive0(char);
void Receive1(char);

void Serial0_Init(unsigned int BAUD)
{
     4c2:	9c 01       	movw	r18, r24
	DDRD |= (0<<0) | (1<<1);
     4c4:	89 9a       	sbi	0x11, 1	; 17
	PORTD=0xff;
     4c6:	8f ef       	ldi	r24, 0xFF	; 255
     4c8:	82 bb       	out	0x12, r24	; 18
	UBRR0H = (((unsigned char)((F_CPU/(BAUD*16UL)))-1)>>8) ;
     4ca:	c9 01       	movw	r24, r18
     4cc:	a0 e0       	ldi	r26, 0x00	; 0
     4ce:	b0 e0       	ldi	r27, 0x00	; 0
     4d0:	88 0f       	add	r24, r24
     4d2:	99 1f       	adc	r25, r25
     4d4:	aa 1f       	adc	r26, r26
     4d6:	bb 1f       	adc	r27, r27
     4d8:	88 0f       	add	r24, r24
     4da:	99 1f       	adc	r25, r25
     4dc:	aa 1f       	adc	r26, r26
     4de:	bb 1f       	adc	r27, r27
     4e0:	9c 01       	movw	r18, r24
     4e2:	ad 01       	movw	r20, r26
     4e4:	22 0f       	add	r18, r18
     4e6:	33 1f       	adc	r19, r19
     4e8:	44 1f       	adc	r20, r20
     4ea:	55 1f       	adc	r21, r21
     4ec:	22 0f       	add	r18, r18
     4ee:	33 1f       	adc	r19, r19
     4f0:	44 1f       	adc	r20, r20
     4f2:	55 1f       	adc	r21, r21
     4f4:	60 e0       	ldi	r22, 0x00	; 0
     4f6:	72 e1       	ldi	r23, 0x12	; 18
     4f8:	8a e7       	ldi	r24, 0x7A	; 122
     4fa:	90 e0       	ldi	r25, 0x00	; 0
     4fc:	0e 94 58 08 	call	0x10b0	; 0x10b0 <__udivmodsi4>
     500:	82 2f       	mov	r24, r18
     502:	90 e0       	ldi	r25, 0x00	; 0
     504:	01 97       	sbiw	r24, 0x01	; 1
     506:	90 bd       	out	0x20, r25	; 32
	UBRR0L = ((unsigned char)(F_CPU/(BAUD*16UL)))-1;
     508:	21 50       	subi	r18, 0x01	; 1
     50a:	29 b9       	out	0x09, r18	; 9
	UCSR0A = 0x80;
     50c:	80 e8       	ldi	r24, 0x80	; 128
     50e:	8b b9       	out	0x0b, r24	; 11
	UCSR0B = (0x01<<TXEN0);
     510:	88 e0       	ldi	r24, 0x08	; 8
     512:	8a b9       	out	0x0a, r24	; 10
    UCSR0C = (1<<URSEL0)|(3 << UCSZ10);
     514:	86 e8       	ldi	r24, 0x86	; 134
     516:	80 bd       	out	0x20, r24	; 32
     518:	08 95       	ret

0000051a <Serial0_Out>:
	UCSR1B = (1<<TXEN1);
    UCSR1C = (1<<URSEL1)|(3 << UCSZ10);
}
void Serial0_Out(unsigned char data0)
{
	while ( !(UCSR0A & (1<<UDRE0)) ); //Wait for empty transmit buffer
     51a:	5d 9b       	sbis	0x0b, 5	; 11
     51c:	fe cf       	rjmp	.-4      	; 0x51a <Serial0_Out>
	UDR0 = data0; //Start transmition
     51e:	8c b9       	out	0x0c, r24	; 12
     520:	08 95       	ret

00000522 <Serial0_Conout>:
	while ( !(UCSR1A & (1<<UDRE1)) ); //Wait for empty transmit buffer
	UDR1 = data1; //Start transmition
}

void Serial0_Conout(const unsigned char *dat,unsigned char n)
{
     522:	0f 93       	push	r16
     524:	1f 93       	push	r17
     526:	cf 93       	push	r28
     528:	df 93       	push	r29
     52a:	06 2f       	mov	r16, r22
	unsigned char ser_j;
	for(ser_j=0;ser_j<n;ser_j++)
     52c:	66 23       	and	r22, r22
     52e:	49 f0       	breq	.+18     	; 0x542 <Serial0_Conout+0x20>
     530:	c8 2f       	mov	r28, r24
     532:	d9 2f       	mov	r29, r25
     534:	10 e0       	ldi	r17, 0x00	; 0
	{
		Serial0_Out(dat[ser_j]);
     536:	89 91       	ld	r24, Y+
     538:	0e 94 8d 02 	call	0x51a	; 0x51a <Serial0_Out>
}

void Serial0_Conout(const unsigned char *dat,unsigned char n)
{
	unsigned char ser_j;
	for(ser_j=0;ser_j<n;ser_j++)
     53c:	1f 5f       	subi	r17, 0xFF	; 255
     53e:	10 13       	cpse	r17, r16
     540:	fa cf       	rjmp	.-12     	; 0x536 <Serial0_Conout+0x14>
	{
		Serial0_Out(dat[ser_j]);
	}
}
     542:	df 91       	pop	r29
     544:	cf 91       	pop	r28
     546:	1f 91       	pop	r17
     548:	0f 91       	pop	r16
     54a:	08 95       	ret

0000054c <Receive0>:
	Serial0_Out(Lcd_t+0x30);
	Serial0_Out(Lcd_o+0x30);
}
void Receive0(char c)
{
	switch (c)
     54c:	88 23       	and	r24, r24
     54e:	31 f0       	breq	.+12     	; 0x55c <Receive0+0x10>
     550:	81 30       	cpi	r24, 0x01	; 1
     552:	31 f4       	brne	.+12     	; 0x560 <Receive0+0x14>
	{
		case 1:
		UCSR0B |= (1<<RXCIE0)|(1<<RXEN0);
     554:	8a b1       	in	r24, 0x0a	; 10
     556:	80 69       	ori	r24, 0x90	; 144
     558:	8a b9       	out	0x0a, r24	; 10
		break;
     55a:	08 95       	ret
		case 0:
		UCSR0B &= ~(1<<RXCIE0);
     55c:	57 98       	cbi	0x0a, 7	; 10
		UCSR0B &= ~(1<<RXEN0);
     55e:	54 98       	cbi	0x0a, 4	; 10
     560:	08 95       	ret

00000562 <forward>:
	else if(a==180) step18=18;
}
unsigned int cc;
void forward(int a)
{
	switch (a)
     562:	01 97       	sbiw	r24, 0x01	; 1
     564:	8c 30       	cpi	r24, 0x0C	; 12
     566:	91 05       	cpc	r25, r1
     568:	08 f0       	brcs	.+2      	; 0x56c <forward+0xa>
     56a:	ca c0       	rjmp	.+404    	; 0x700 <forward+0x19e>
     56c:	88 5c       	subi	r24, 0xC8	; 200
     56e:	9f 4f       	sbci	r25, 0xFF	; 255
     570:	fc 01       	movw	r30, r24
     572:	0c 94 7a 08 	jmp	0x10f4	; 0x10f4 <__tablejump2__>
	else if(a==180) step3=19;
}

void servo2(int a)
{
	if(a==0) step4=15;
     576:	8f e0       	ldi	r24, 0x0F	; 15
     578:	80 93 8d 01 	sts	0x018D, r24
	else if(a==90) step4=12;
	else if(a==180) step4=8;
}
void servo2a(int a)
{
	if(a==0) step5=16;
     57c:	90 e1       	ldi	r25, 0x10	; 16
     57e:	90 93 81 01 	sts	0x0181, r25
	else if(a==180) step9=19;
}

void servo4(int a)
{
	if(a==0) step10=13;
     582:	9d e0       	ldi	r25, 0x0D	; 13
     584:	90 93 87 01 	sts	0x0187, r25
	else if(a==90) step10=17;
	else if(a==180) step10=20;
}
void servo4a(int a)
{
	if(a==0) step11=10;
     588:	9a e0       	ldi	r25, 0x0A	; 10
     58a:	90 93 92 01 	sts	0x0192, r25
	else if(a==180) step15=19;
}

void servo6(int a)
{
	if(a==0) step16=15;
     58e:	80 93 9a 01 	sts	0x019A, r24
	else if(a==90) step16=19;
	else if(a==180) step16=22;
}
void servo6a(int a)
{
	if(a==0) step17=19;
     592:	83 e1       	ldi	r24, 0x13	; 19
     594:	80 93 a4 01 	sts	0x01A4, r24
     598:	08 95       	ret
}
void servo3b(int a)
{
	if(a==0) step9=12;
	else if(a==90) step9=17;
	else if(a==180) step9=19;
     59a:	83 e1       	ldi	r24, 0x13	; 19
     59c:	80 93 a0 01 	sts	0x01A0, r24
	else if(a==180) step2=10;
}
void servo1b(int a)
{
	if(a==0) step3=12;
	else if(a==90) step3=15;
     5a0:	8f e0       	ldi	r24, 0x0F	; 15
     5a2:	80 93 88 01 	sts	0x0188, r24
	else if(a==180) step14=25;
}
void servo5b(int a)
{
	if(a==0) step15=13;
	else if(a==90) step15=15;
     5a6:	80 93 c0 01 	sts	0x01C0, r24
     5aa:	08 95       	ret
}

void servo2(int a)
{
	if(a==0) step4=15;
	else if(a==90) step4=12;
     5ac:	8c e0       	ldi	r24, 0x0C	; 12
     5ae:	80 93 8d 01 	sts	0x018D, r24
	else if(a==180) step4=8;
}
void servo2a(int a)
{
	if(a==0) step5=16;
	else if(a==90) step5=15;
     5b2:	9f e0       	ldi	r25, 0x0F	; 15
     5b4:	90 93 81 01 	sts	0x0181, r25
}

void servo4(int a)
{
	if(a==0) step10=13;
	else if(a==90) step10=17;
     5b8:	91 e1       	ldi	r25, 0x11	; 17
     5ba:	90 93 87 01 	sts	0x0187, r25
	else if(a==180) step10=20;
}
void servo4a(int a)
{
	if(a==0) step11=10;
	else if(a==90) step11=12;
     5be:	80 93 92 01 	sts	0x0192, r24
}

void servo6(int a)
{
	if(a==0) step16=15;
	else if(a==90) step16=19;
     5c2:	83 e1       	ldi	r24, 0x13	; 19
     5c4:	80 93 9a 01 	sts	0x019A, r24
	else if(a==180) step16=22;
}
void servo6a(int a)
{
	if(a==0) step17=19;
	else if(a==90) step17=22;
     5c8:	86 e1       	ldi	r24, 0x16	; 22
     5ca:	80 93 a4 01 	sts	0x01A4, r24
     5ce:	08 95       	ret
int time1,time2,time3,time4;
unsigned char toggle,a;
unsigned char rec[16],r;
void servo1(int a)
{
	if(a==0) step1=11;
     5d0:	8b e0       	ldi	r24, 0x0B	; 11
     5d2:	80 93 99 01 	sts	0x0199, r24
	else if(a==90) step1=8;
	else if(a==180) step1=5;
}
void servo1a(int a)
{
	if(a==0) step2=16;
     5d6:	80 e1       	ldi	r24, 0x10	; 16
     5d8:	80 93 a2 01 	sts	0x01A2, r24
	else if(a==180) step6=18;
}

void servo3(int a)
{
	if(a==0) step7=14;
     5dc:	9e e0       	ldi	r25, 0x0E	; 14
     5de:	90 93 a1 01 	sts	0x01A1, r25
	else if(a==90) step7=11;
	else if(a==180) step7=7;
}
void servo3a(int a)
{
	if(a==0) step8=10;
     5e2:	9a e0       	ldi	r25, 0x0A	; 10
     5e4:	90 93 8a 01 	sts	0x018A, r25
	else if(a==180) step12=19;
}

void servo5(int a)
{
	if(a==0) step13=16;
     5e8:	80 93 91 01 	sts	0x0191, r24
	else if(a==90) step13=20;
	else if(a==180) step13=24;
}
void servo5a(int a)
{
	if(a==0) step14=18;
     5ec:	82 e1       	ldi	r24, 0x12	; 18
     5ee:	80 93 a3 01 	sts	0x01A3, r24
     5f2:	08 95       	ret
}
void servo2b(int a)
{
	if(a==0) step6=12;
	else if(a==90) step6=14;
	else if(a==180) step6=18;
     5f4:	82 e1       	ldi	r24, 0x12	; 18
     5f6:	80 93 89 01 	sts	0x0189, r24
	else if(a==180) step17=25;
}
void servo6b(int a)
{
	if(a==0) step18=11;
	else if(a==90) step18=15;
     5fa:	8f e0       	ldi	r24, 0x0F	; 15
     5fc:	80 93 82 01 	sts	0x0182, r24
	else if(a==90) step11=12;
	else if(a==180) step11=16;
}
void servo4b(int a)
{
	if(a==0) step12=11;
     600:	8b e0       	ldi	r24, 0x0B	; 11
     602:	80 93 a7 01 	sts	0x01A7, r24
     606:	08 95       	ret
unsigned char toggle,a;
unsigned char rec[16],r;
void servo1(int a)
{
	if(a==0) step1=11;
	else if(a==90) step1=8;
     608:	88 e0       	ldi	r24, 0x08	; 8
     60a:	80 93 99 01 	sts	0x0199, r24
	else if(a==180) step1=5;
}
void servo1a(int a)
{
	if(a==0) step2=16;
	else if(a==90) step2=14;
     60e:	9e e0       	ldi	r25, 0x0E	; 14
     610:	90 93 a2 01 	sts	0x01A2, r25
}

void servo3(int a)
{
	if(a==0) step7=14;
	else if(a==90) step7=11;
     614:	9b e0       	ldi	r25, 0x0B	; 11
     616:	90 93 a1 01 	sts	0x01A1, r25
	else if(a==180) step7=7;
}
void servo3a(int a)
{
	if(a==0) step8=10;
	else if(a==90) step8=8;
     61a:	80 93 8a 01 	sts	0x018A, r24
}

void servo5(int a)
{
	if(a==0) step13=16;
	else if(a==90) step13=20;
     61e:	84 e1       	ldi	r24, 0x14	; 20
     620:	80 93 91 01 	sts	0x0191, r24
	else if(a==180) step13=24;
}
void servo5a(int a)
{
	if(a==0) step14=18;
	else if(a==90) step14=20;
     624:	80 93 a3 01 	sts	0x01A3, r24
     628:	08 95       	ret
	else if(a==180) step3=19;
}

void servo2(int a)
{
	if(a==0) step4=15;
     62a:	8f e0       	ldi	r24, 0x0F	; 15
     62c:	80 93 8d 01 	sts	0x018D, r24
	else if(a==90) step4=12;
	else if(a==180) step4=8;
}
void servo2a(int a)
{
	if(a==0) step5=16;
     630:	90 e1       	ldi	r25, 0x10	; 16
     632:	90 93 81 01 	sts	0x0181, r25
	else if(a==180) step9=19;
}

void servo4(int a)
{
	if(a==0) step10=13;
     636:	9d e0       	ldi	r25, 0x0D	; 13
     638:	90 93 87 01 	sts	0x0187, r25
	else if(a==90) step10=17;
	else if(a==180) step10=20;
}
void servo4a(int a)
{
	if(a==0) step11=10;
     63c:	9a e0       	ldi	r25, 0x0A	; 10
     63e:	90 93 92 01 	sts	0x0192, r25
	else if(a==180) step15=19;
}

void servo6(int a)
{
	if(a==0) step16=15;
     642:	80 93 9a 01 	sts	0x019A, r24
	else if(a==90) step16=19;
	else if(a==180) step16=22;
}
void servo6a(int a)
{
	if(a==0) step17=19;
     646:	83 e1       	ldi	r24, 0x13	; 19
     648:	80 93 a4 01 	sts	0x01A4, r24
     64c:	08 95       	ret
}
void servo3b(int a)
{
	if(a==0) step9=12;
	else if(a==90) step9=17;
	else if(a==180) step9=19;
     64e:	83 e1       	ldi	r24, 0x13	; 19
     650:	80 93 a0 01 	sts	0x01A0, r24
	else if(a==180) step2=10;
}
void servo1b(int a)
{
	if(a==0) step3=12;
	else if(a==90) step3=15;
     654:	8f e0       	ldi	r24, 0x0F	; 15
     656:	80 93 88 01 	sts	0x0188, r24
	else if(a==180) step14=25;
}
void servo5b(int a)
{
	if(a==0) step15=13;
	else if(a==90) step15=15;
     65a:	80 93 c0 01 	sts	0x01C0, r24
	else if(a==180) step5=10;
}
void servo2b(int a)
{
	if(a==0) step6=12;
	else if(a==90) step6=14;
     65e:	8e e0       	ldi	r24, 0x0E	; 14
     660:	80 93 89 01 	sts	0x0189, r24
}
void servo6b(int a)
{
	if(a==0) step18=11;
	else if(a==90) step18=15;
	else if(a==180) step18=18;
     664:	92 e1       	ldi	r25, 0x12	; 18
     666:	90 93 82 01 	sts	0x0182, r25
	else if(a==180) step11=16;
}
void servo4b(int a)
{
	if(a==0) step12=11;
	else if(a==90) step12=14;
     66a:	80 93 a7 01 	sts	0x01A7, r24
     66e:	08 95       	ret
}

void servo2(int a)
{
	if(a==0) step4=15;
	else if(a==90) step4=12;
     670:	8c e0       	ldi	r24, 0x0C	; 12
     672:	80 93 8d 01 	sts	0x018D, r24
	else if(a==180) step4=8;
}
void servo2a(int a)
{
	if(a==0) step5=16;
	else if(a==90) step5=15;
     676:	9f e0       	ldi	r25, 0x0F	; 15
     678:	90 93 81 01 	sts	0x0181, r25
}

void servo4(int a)
{
	if(a==0) step10=13;
	else if(a==90) step10=17;
     67c:	91 e1       	ldi	r25, 0x11	; 17
     67e:	90 93 87 01 	sts	0x0187, r25
	else if(a==180) step10=20;
}
void servo4a(int a)
{
	if(a==0) step11=10;
	else if(a==90) step11=12;
     682:	80 93 92 01 	sts	0x0192, r24
}

void servo6(int a)
{
	if(a==0) step16=15;
	else if(a==90) step16=19;
     686:	83 e1       	ldi	r24, 0x13	; 19
     688:	80 93 9a 01 	sts	0x019A, r24
	else if(a==180) step16=22;
}
void servo6a(int a)
{
	if(a==0) step17=19;
	else if(a==90) step17=22;
     68c:	86 e1       	ldi	r24, 0x16	; 22
     68e:	80 93 a4 01 	sts	0x01A4, r24
     692:	08 95       	ret
int time1,time2,time3,time4;
unsigned char toggle,a;
unsigned char rec[16],r;
void servo1(int a)
{
	if(a==0) step1=11;
     694:	8b e0       	ldi	r24, 0x0B	; 11
     696:	80 93 99 01 	sts	0x0199, r24
	else if(a==90) step1=8;
	else if(a==180) step1=5;
}
void servo1a(int a)
{
	if(a==0) step2=16;
     69a:	80 e1       	ldi	r24, 0x10	; 16
     69c:	80 93 a2 01 	sts	0x01A2, r24
	else if(a==180) step6=18;
}

void servo3(int a)
{
	if(a==0) step7=14;
     6a0:	9e e0       	ldi	r25, 0x0E	; 14
     6a2:	90 93 a1 01 	sts	0x01A1, r25
	else if(a==90) step7=11;
	else if(a==180) step7=7;
}
void servo3a(int a)
{
	if(a==0) step8=10;
     6a6:	9a e0       	ldi	r25, 0x0A	; 10
     6a8:	90 93 8a 01 	sts	0x018A, r25
	else if(a==180) step12=19;
}

void servo5(int a)
{
	if(a==0) step13=16;
     6ac:	80 93 91 01 	sts	0x0191, r24
	else if(a==90) step13=20;
	else if(a==180) step13=24;
}
void servo5a(int a)
{
	if(a==0) step14=18;
     6b0:	82 e1       	ldi	r24, 0x12	; 18
     6b2:	80 93 a3 01 	sts	0x01A3, r24
     6b6:	08 95       	ret
	else if(a==180) step8=4;
}
void servo3b(int a)
{
	if(a==0) step9=12;
	else if(a==90) step9=17;
     6b8:	81 e1       	ldi	r24, 0x11	; 17
     6ba:	80 93 a0 01 	sts	0x01A0, r24
	else if(a==90) step2=14;
	else if(a==180) step2=10;
}
void servo1b(int a)
{
	if(a==0) step3=12;
     6be:	8c e0       	ldi	r24, 0x0C	; 12
     6c0:	80 93 88 01 	sts	0x0188, r24
}
void servo5b(int a)
{
	if(a==0) step15=13;
	else if(a==90) step15=15;
	else if(a==180) step15=19;
     6c4:	83 e1       	ldi	r24, 0x13	; 19
     6c6:	80 93 c0 01 	sts	0x01C0, r24
}
void servo2b(int a)
{
	if(a==0) step6=12;
	else if(a==90) step6=14;
	else if(a==180) step6=18;
     6ca:	82 e1       	ldi	r24, 0x12	; 18
     6cc:	80 93 89 01 	sts	0x0189, r24
	else if(a==180) step17=25;
}
void servo6b(int a)
{
	if(a==0) step18=11;
	else if(a==90) step18=15;
     6d0:	8f e0       	ldi	r24, 0x0F	; 15
     6d2:	80 93 82 01 	sts	0x0182, r24
	else if(a==90) step11=12;
	else if(a==180) step11=16;
}
void servo4b(int a)
{
	if(a==0) step12=11;
     6d6:	8b e0       	ldi	r24, 0x0B	; 11
     6d8:	80 93 a7 01 	sts	0x01A7, r24
     6dc:	08 95       	ret
unsigned char toggle,a;
unsigned char rec[16],r;
void servo1(int a)
{
	if(a==0) step1=11;
	else if(a==90) step1=8;
     6de:	88 e0       	ldi	r24, 0x08	; 8
     6e0:	80 93 99 01 	sts	0x0199, r24
	else if(a==180) step1=5;
}
void servo1a(int a)
{
	if(a==0) step2=16;
	else if(a==90) step2=14;
     6e4:	9e e0       	ldi	r25, 0x0E	; 14
     6e6:	90 93 a2 01 	sts	0x01A2, r25
}

void servo3(int a)
{
	if(a==0) step7=14;
	else if(a==90) step7=11;
     6ea:	9b e0       	ldi	r25, 0x0B	; 11
     6ec:	90 93 a1 01 	sts	0x01A1, r25
	else if(a==180) step7=7;
}
void servo3a(int a)
{
	if(a==0) step8=10;
	else if(a==90) step8=8;
     6f0:	80 93 8a 01 	sts	0x018A, r24
}

void servo5(int a)
{
	if(a==0) step13=16;
	else if(a==90) step13=20;
     6f4:	84 e1       	ldi	r24, 0x14	; 20
     6f6:	80 93 91 01 	sts	0x0191, r24
	else if(a==180) step13=24;
}
void servo5a(int a)
{
	if(a==0) step14=18;
	else if(a==90) step14=20;
     6fa:	80 93 a3 01 	sts	0x01A3, r24
     6fe:	08 95       	ret
unsigned char toggle,a;
unsigned char rec[16],r;
void servo1(int a)
{
	if(a==0) step1=11;
	else if(a==90) step1=8;
     700:	98 e0       	ldi	r25, 0x08	; 8
     702:	90 93 99 01 	sts	0x0199, r25
	else if(a==180) step1=5;
}
void servo1a(int a)
{
	if(a==0) step2=16;
	else if(a==90) step2=14;
     706:	8e e0       	ldi	r24, 0x0E	; 14
     708:	80 93 a2 01 	sts	0x01A2, r24
}

void servo2(int a)
{
	if(a==0) step4=15;
	else if(a==90) step4=12;
     70c:	8c e0       	ldi	r24, 0x0C	; 12
     70e:	80 93 8d 01 	sts	0x018D, r24
	else if(a==180) step4=8;
}
void servo2a(int a)
{
	if(a==0) step5=16;
	else if(a==90) step5=15;
     712:	2f e0       	ldi	r18, 0x0F	; 15
     714:	20 93 81 01 	sts	0x0181, r18
}

void servo3(int a)
{
	if(a==0) step7=14;
	else if(a==90) step7=11;
     718:	2b e0       	ldi	r18, 0x0B	; 11
     71a:	20 93 a1 01 	sts	0x01A1, r18
	else if(a==180) step7=7;
}
void servo3a(int a)
{
	if(a==0) step8=10;
	else if(a==90) step8=8;
     71e:	90 93 8a 01 	sts	0x018A, r25
}

void servo4(int a)
{
	if(a==0) step10=13;
	else if(a==90) step10=17;
     722:	91 e1       	ldi	r25, 0x11	; 17
     724:	90 93 87 01 	sts	0x0187, r25
	else if(a==180) step10=20;
}
void servo4a(int a)
{
	if(a==0) step11=10;
	else if(a==90) step11=12;
     728:	80 93 92 01 	sts	0x0192, r24
}

void servo5(int a)
{
	if(a==0) step13=16;
	else if(a==90) step13=20;
     72c:	84 e1       	ldi	r24, 0x14	; 20
     72e:	80 93 91 01 	sts	0x0191, r24
	else if(a==180) step13=24;
}
void servo5a(int a)
{
	if(a==0) step14=18;
	else if(a==90) step14=20;
     732:	80 93 a3 01 	sts	0x01A3, r24
}

void servo6(int a)
{
	if(a==0) step16=15;
	else if(a==90) step16=19;
     736:	83 e1       	ldi	r24, 0x13	; 19
     738:	80 93 9a 01 	sts	0x019A, r24
	else if(a==180) step16=22;
}
void servo6a(int a)
{
	if(a==0) step17=19;
	else if(a==90) step17=22;
     73c:	86 e1       	ldi	r24, 0x16	; 22
     73e:	80 93 a4 01 	sts	0x01A4, r24
     742:	08 95       	ret

00000744 <reverse>:
		break;
	}
}
void reverse(int a)
{
	switch (a)
     744:	01 97       	sbiw	r24, 0x01	; 1
     746:	8c 30       	cpi	r24, 0x0C	; 12
     748:	91 05       	cpc	r25, r1
     74a:	08 f0       	brcs	.+2      	; 0x74e <reverse+0xa>
     74c:	ca c0       	rjmp	.+404    	; 0x8e2 <reverse+0x19e>
     74e:	8c 5b       	subi	r24, 0xBC	; 188
     750:	9f 4f       	sbci	r25, 0xFF	; 255
     752:	fc 01       	movw	r30, r24
     754:	0c 94 7a 08 	jmp	0x10f4	; 0x10f4 <__tablejump2__>
	else if(a==180) step3=19;
}

void servo2(int a)
{
	if(a==0) step4=15;
     758:	8f e0       	ldi	r24, 0x0F	; 15
     75a:	80 93 8d 01 	sts	0x018D, r24
	else if(a==90) step4=12;
	else if(a==180) step4=8;
}
void servo2a(int a)
{
	if(a==0) step5=16;
     75e:	90 e1       	ldi	r25, 0x10	; 16
     760:	90 93 81 01 	sts	0x0181, r25
	else if(a==180) step9=19;
}

void servo4(int a)
{
	if(a==0) step10=13;
     764:	9d e0       	ldi	r25, 0x0D	; 13
     766:	90 93 87 01 	sts	0x0187, r25
	else if(a==90) step10=17;
	else if(a==180) step10=20;
}
void servo4a(int a)
{
	if(a==0) step11=10;
     76a:	9a e0       	ldi	r25, 0x0A	; 10
     76c:	90 93 92 01 	sts	0x0192, r25
	else if(a==180) step15=19;
}

void servo6(int a)
{
	if(a==0) step16=15;
     770:	80 93 9a 01 	sts	0x019A, r24
	else if(a==90) step16=19;
	else if(a==180) step16=22;
}
void servo6a(int a)
{
	if(a==0) step17=19;
     774:	83 e1       	ldi	r24, 0x13	; 19
     776:	80 93 a4 01 	sts	0x01A4, r24
     77a:	08 95       	ret
	else if(a==180) step8=4;
}
void servo3b(int a)
{
	if(a==0) step9=12;
	else if(a==90) step9=17;
     77c:	81 e1       	ldi	r24, 0x11	; 17
     77e:	80 93 a0 01 	sts	0x01A0, r24
	else if(a==90) step2=14;
	else if(a==180) step2=10;
}
void servo1b(int a)
{
	if(a==0) step3=12;
     782:	8c e0       	ldi	r24, 0x0C	; 12
     784:	80 93 88 01 	sts	0x0188, r24
}
void servo5b(int a)
{
	if(a==0) step15=13;
	else if(a==90) step15=15;
	else if(a==180) step15=19;
     788:	83 e1       	ldi	r24, 0x13	; 19
     78a:	80 93 c0 01 	sts	0x01C0, r24
     78e:	08 95       	ret
}

void servo2(int a)
{
	if(a==0) step4=15;
	else if(a==90) step4=12;
     790:	8c e0       	ldi	r24, 0x0C	; 12
     792:	80 93 8d 01 	sts	0x018D, r24
	else if(a==180) step4=8;
}
void servo2a(int a)
{
	if(a==0) step5=16;
	else if(a==90) step5=15;
     796:	9f e0       	ldi	r25, 0x0F	; 15
     798:	90 93 81 01 	sts	0x0181, r25
}

void servo4(int a)
{
	if(a==0) step10=13;
	else if(a==90) step10=17;
     79c:	91 e1       	ldi	r25, 0x11	; 17
     79e:	90 93 87 01 	sts	0x0187, r25
	else if(a==180) step10=20;
}
void servo4a(int a)
{
	if(a==0) step11=10;
	else if(a==90) step11=12;
     7a2:	80 93 92 01 	sts	0x0192, r24
}

void servo6(int a)
{
	if(a==0) step16=15;
	else if(a==90) step16=19;
     7a6:	83 e1       	ldi	r24, 0x13	; 19
     7a8:	80 93 9a 01 	sts	0x019A, r24
	else if(a==180) step16=22;
}
void servo6a(int a)
{
	if(a==0) step17=19;
	else if(a==90) step17=22;
     7ac:	86 e1       	ldi	r24, 0x16	; 22
     7ae:	80 93 a4 01 	sts	0x01A4, r24
     7b2:	08 95       	ret
int time1,time2,time3,time4;
unsigned char toggle,a;
unsigned char rec[16],r;
void servo1(int a)
{
	if(a==0) step1=11;
     7b4:	8b e0       	ldi	r24, 0x0B	; 11
     7b6:	80 93 99 01 	sts	0x0199, r24
	else if(a==90) step1=8;
	else if(a==180) step1=5;
}
void servo1a(int a)
{
	if(a==0) step2=16;
     7ba:	80 e1       	ldi	r24, 0x10	; 16
     7bc:	80 93 a2 01 	sts	0x01A2, r24
	else if(a==180) step6=18;
}

void servo3(int a)
{
	if(a==0) step7=14;
     7c0:	9e e0       	ldi	r25, 0x0E	; 14
     7c2:	90 93 a1 01 	sts	0x01A1, r25
	else if(a==90) step7=11;
	else if(a==180) step7=7;
}
void servo3a(int a)
{
	if(a==0) step8=10;
     7c6:	9a e0       	ldi	r25, 0x0A	; 10
     7c8:	90 93 8a 01 	sts	0x018A, r25
	else if(a==180) step12=19;
}

void servo5(int a)
{
	if(a==0) step13=16;
     7cc:	80 93 91 01 	sts	0x0191, r24
	else if(a==90) step13=20;
	else if(a==180) step13=24;
}
void servo5a(int a)
{
	if(a==0) step14=18;
     7d0:	82 e1       	ldi	r24, 0x12	; 18
     7d2:	80 93 a3 01 	sts	0x01A3, r24
     7d6:	08 95       	ret
	else if(a==180) step5=10;
}
void servo2b(int a)
{
	if(a==0) step6=12;
	else if(a==90) step6=14;
     7d8:	8e e0       	ldi	r24, 0x0E	; 14
     7da:	80 93 89 01 	sts	0x0189, r24
}
void servo6b(int a)
{
	if(a==0) step18=11;
	else if(a==90) step18=15;
	else if(a==180) step18=18;
     7de:	92 e1       	ldi	r25, 0x12	; 18
     7e0:	90 93 82 01 	sts	0x0182, r25
	else if(a==180) step11=16;
}
void servo4b(int a)
{
	if(a==0) step12=11;
	else if(a==90) step12=14;
     7e4:	80 93 a7 01 	sts	0x01A7, r24
     7e8:	08 95       	ret
unsigned char toggle,a;
unsigned char rec[16],r;
void servo1(int a)
{
	if(a==0) step1=11;
	else if(a==90) step1=8;
     7ea:	88 e0       	ldi	r24, 0x08	; 8
     7ec:	80 93 99 01 	sts	0x0199, r24
	else if(a==180) step1=5;
}
void servo1a(int a)
{
	if(a==0) step2=16;
	else if(a==90) step2=14;
     7f0:	9e e0       	ldi	r25, 0x0E	; 14
     7f2:	90 93 a2 01 	sts	0x01A2, r25
}

void servo3(int a)
{
	if(a==0) step7=14;
	else if(a==90) step7=11;
     7f6:	9b e0       	ldi	r25, 0x0B	; 11
     7f8:	90 93 a1 01 	sts	0x01A1, r25
	else if(a==180) step7=7;
}
void servo3a(int a)
{
	if(a==0) step8=10;
	else if(a==90) step8=8;
     7fc:	80 93 8a 01 	sts	0x018A, r24
}

void servo5(int a)
{
	if(a==0) step13=16;
	else if(a==90) step13=20;
     800:	84 e1       	ldi	r24, 0x14	; 20
     802:	80 93 91 01 	sts	0x0191, r24
	else if(a==180) step13=24;
}
void servo5a(int a)
{
	if(a==0) step14=18;
	else if(a==90) step14=20;
     806:	80 93 a3 01 	sts	0x01A3, r24
     80a:	08 95       	ret
	else if(a==180) step3=19;
}

void servo2(int a)
{
	if(a==0) step4=15;
     80c:	8f e0       	ldi	r24, 0x0F	; 15
     80e:	80 93 8d 01 	sts	0x018D, r24
	else if(a==90) step4=12;
	else if(a==180) step4=8;
}
void servo2a(int a)
{
	if(a==0) step5=16;
     812:	90 e1       	ldi	r25, 0x10	; 16
     814:	90 93 81 01 	sts	0x0181, r25
	else if(a==180) step9=19;
}

void servo4(int a)
{
	if(a==0) step10=13;
     818:	9d e0       	ldi	r25, 0x0D	; 13
     81a:	90 93 87 01 	sts	0x0187, r25
	else if(a==90) step10=17;
	else if(a==180) step10=20;
}
void servo4a(int a)
{
	if(a==0) step11=10;
     81e:	9a e0       	ldi	r25, 0x0A	; 10
     820:	90 93 92 01 	sts	0x0192, r25
	else if(a==180) step15=19;
}

void servo6(int a)
{
	if(a==0) step16=15;
     824:	80 93 9a 01 	sts	0x019A, r24
	else if(a==90) step16=19;
	else if(a==180) step16=22;
}
void servo6a(int a)
{
	if(a==0) step17=19;
     828:	83 e1       	ldi	r24, 0x13	; 19
     82a:	80 93 a4 01 	sts	0x01A4, r24
     82e:	08 95       	ret
	else if(a==180) step8=4;
}
void servo3b(int a)
{
	if(a==0) step9=12;
	else if(a==90) step9=17;
     830:	81 e1       	ldi	r24, 0x11	; 17
     832:	80 93 a0 01 	sts	0x01A0, r24
	else if(a==90) step2=14;
	else if(a==180) step2=10;
}
void servo1b(int a)
{
	if(a==0) step3=12;
     836:	8c e0       	ldi	r24, 0x0C	; 12
     838:	80 93 88 01 	sts	0x0188, r24
}
void servo5b(int a)
{
	if(a==0) step15=13;
	else if(a==90) step15=15;
	else if(a==180) step15=19;
     83c:	83 e1       	ldi	r24, 0x13	; 19
     83e:	80 93 c0 01 	sts	0x01C0, r24
}
void servo2b(int a)
{
	if(a==0) step6=12;
	else if(a==90) step6=14;
	else if(a==180) step6=18;
     842:	82 e1       	ldi	r24, 0x12	; 18
     844:	80 93 89 01 	sts	0x0189, r24
	else if(a==180) step17=25;
}
void servo6b(int a)
{
	if(a==0) step18=11;
	else if(a==90) step18=15;
     848:	8f e0       	ldi	r24, 0x0F	; 15
     84a:	80 93 82 01 	sts	0x0182, r24
	else if(a==90) step11=12;
	else if(a==180) step11=16;
}
void servo4b(int a)
{
	if(a==0) step12=11;
     84e:	8b e0       	ldi	r24, 0x0B	; 11
     850:	80 93 a7 01 	sts	0x01A7, r24
     854:	08 95       	ret
}

void servo2(int a)
{
	if(a==0) step4=15;
	else if(a==90) step4=12;
     856:	8c e0       	ldi	r24, 0x0C	; 12
     858:	80 93 8d 01 	sts	0x018D, r24
	else if(a==180) step4=8;
}
void servo2a(int a)
{
	if(a==0) step5=16;
	else if(a==90) step5=15;
     85c:	9f e0       	ldi	r25, 0x0F	; 15
     85e:	90 93 81 01 	sts	0x0181, r25
}

void servo4(int a)
{
	if(a==0) step10=13;
	else if(a==90) step10=17;
     862:	91 e1       	ldi	r25, 0x11	; 17
     864:	90 93 87 01 	sts	0x0187, r25
	else if(a==180) step10=20;
}
void servo4a(int a)
{
	if(a==0) step11=10;
	else if(a==90) step11=12;
     868:	80 93 92 01 	sts	0x0192, r24
}

void servo6(int a)
{
	if(a==0) step16=15;
	else if(a==90) step16=19;
     86c:	83 e1       	ldi	r24, 0x13	; 19
     86e:	80 93 9a 01 	sts	0x019A, r24
	else if(a==180) step16=22;
}
void servo6a(int a)
{
	if(a==0) step17=19;
	else if(a==90) step17=22;
     872:	86 e1       	ldi	r24, 0x16	; 22
     874:	80 93 a4 01 	sts	0x01A4, r24
     878:	08 95       	ret
int time1,time2,time3,time4;
unsigned char toggle,a;
unsigned char rec[16],r;
void servo1(int a)
{
	if(a==0) step1=11;
     87a:	8b e0       	ldi	r24, 0x0B	; 11
     87c:	80 93 99 01 	sts	0x0199, r24
	else if(a==90) step1=8;
	else if(a==180) step1=5;
}
void servo1a(int a)
{
	if(a==0) step2=16;
     880:	80 e1       	ldi	r24, 0x10	; 16
     882:	80 93 a2 01 	sts	0x01A2, r24
	else if(a==180) step6=18;
}

void servo3(int a)
{
	if(a==0) step7=14;
     886:	9e e0       	ldi	r25, 0x0E	; 14
     888:	90 93 a1 01 	sts	0x01A1, r25
	else if(a==90) step7=11;
	else if(a==180) step7=7;
}
void servo3a(int a)
{
	if(a==0) step8=10;
     88c:	9a e0       	ldi	r25, 0x0A	; 10
     88e:	90 93 8a 01 	sts	0x018A, r25
	else if(a==180) step12=19;
}

void servo5(int a)
{
	if(a==0) step13=16;
     892:	80 93 91 01 	sts	0x0191, r24
	else if(a==90) step13=20;
	else if(a==180) step13=24;
}
void servo5a(int a)
{
	if(a==0) step14=18;
     896:	82 e1       	ldi	r24, 0x12	; 18
     898:	80 93 a3 01 	sts	0x01A3, r24
     89c:	08 95       	ret
}
void servo3b(int a)
{
	if(a==0) step9=12;
	else if(a==90) step9=17;
	else if(a==180) step9=19;
     89e:	83 e1       	ldi	r24, 0x13	; 19
     8a0:	80 93 a0 01 	sts	0x01A0, r24
	else if(a==180) step2=10;
}
void servo1b(int a)
{
	if(a==0) step3=12;
	else if(a==90) step3=15;
     8a4:	8f e0       	ldi	r24, 0x0F	; 15
     8a6:	80 93 88 01 	sts	0x0188, r24
	else if(a==180) step14=25;
}
void servo5b(int a)
{
	if(a==0) step15=13;
	else if(a==90) step15=15;
     8aa:	80 93 c0 01 	sts	0x01C0, r24
	else if(a==180) step5=10;
}
void servo2b(int a)
{
	if(a==0) step6=12;
	else if(a==90) step6=14;
     8ae:	8e e0       	ldi	r24, 0x0E	; 14
     8b0:	80 93 89 01 	sts	0x0189, r24
}
void servo6b(int a)
{
	if(a==0) step18=11;
	else if(a==90) step18=15;
	else if(a==180) step18=18;
     8b4:	92 e1       	ldi	r25, 0x12	; 18
     8b6:	90 93 82 01 	sts	0x0182, r25
	else if(a==180) step11=16;
}
void servo4b(int a)
{
	if(a==0) step12=11;
	else if(a==90) step12=14;
     8ba:	80 93 a7 01 	sts	0x01A7, r24
     8be:	08 95       	ret
unsigned char toggle,a;
unsigned char rec[16],r;
void servo1(int a)
{
	if(a==0) step1=11;
	else if(a==90) step1=8;
     8c0:	88 e0       	ldi	r24, 0x08	; 8
     8c2:	80 93 99 01 	sts	0x0199, r24
	else if(a==180) step1=5;
}
void servo1a(int a)
{
	if(a==0) step2=16;
	else if(a==90) step2=14;
     8c6:	9e e0       	ldi	r25, 0x0E	; 14
     8c8:	90 93 a2 01 	sts	0x01A2, r25
}

void servo3(int a)
{
	if(a==0) step7=14;
	else if(a==90) step7=11;
     8cc:	9b e0       	ldi	r25, 0x0B	; 11
     8ce:	90 93 a1 01 	sts	0x01A1, r25
	else if(a==180) step7=7;
}
void servo3a(int a)
{
	if(a==0) step8=10;
	else if(a==90) step8=8;
     8d2:	80 93 8a 01 	sts	0x018A, r24
}

void servo5(int a)
{
	if(a==0) step13=16;
	else if(a==90) step13=20;
     8d6:	84 e1       	ldi	r24, 0x14	; 20
     8d8:	80 93 91 01 	sts	0x0191, r24
	else if(a==180) step13=24;
}
void servo5a(int a)
{
	if(a==0) step14=18;
	else if(a==90) step14=20;
     8dc:	80 93 a3 01 	sts	0x01A3, r24
     8e0:	08 95       	ret
unsigned char toggle,a;
unsigned char rec[16],r;
void servo1(int a)
{
	if(a==0) step1=11;
	else if(a==90) step1=8;
     8e2:	98 e0       	ldi	r25, 0x08	; 8
     8e4:	90 93 99 01 	sts	0x0199, r25
	else if(a==180) step1=5;
}
void servo1a(int a)
{
	if(a==0) step2=16;
	else if(a==90) step2=14;
     8e8:	8e e0       	ldi	r24, 0x0E	; 14
     8ea:	80 93 a2 01 	sts	0x01A2, r24
}

void servo2(int a)
{
	if(a==0) step4=15;
	else if(a==90) step4=12;
     8ee:	8c e0       	ldi	r24, 0x0C	; 12
     8f0:	80 93 8d 01 	sts	0x018D, r24
	else if(a==180) step4=8;
}
void servo2a(int a)
{
	if(a==0) step5=16;
	else if(a==90) step5=15;
     8f4:	2f e0       	ldi	r18, 0x0F	; 15
     8f6:	20 93 81 01 	sts	0x0181, r18
}

void servo3(int a)
{
	if(a==0) step7=14;
	else if(a==90) step7=11;
     8fa:	2b e0       	ldi	r18, 0x0B	; 11
     8fc:	20 93 a1 01 	sts	0x01A1, r18
	else if(a==180) step7=7;
}
void servo3a(int a)
{
	if(a==0) step8=10;
	else if(a==90) step8=8;
     900:	90 93 8a 01 	sts	0x018A, r25
}

void servo4(int a)
{
	if(a==0) step10=13;
	else if(a==90) step10=17;
     904:	91 e1       	ldi	r25, 0x11	; 17
     906:	90 93 87 01 	sts	0x0187, r25
	else if(a==180) step10=20;
}
void servo4a(int a)
{
	if(a==0) step11=10;
	else if(a==90) step11=12;
     90a:	80 93 92 01 	sts	0x0192, r24
}

void servo5(int a)
{
	if(a==0) step13=16;
	else if(a==90) step13=20;
     90e:	84 e1       	ldi	r24, 0x14	; 20
     910:	80 93 91 01 	sts	0x0191, r24
	else if(a==180) step13=24;
}
void servo5a(int a)
{
	if(a==0) step14=18;
	else if(a==90) step14=20;
     914:	80 93 a3 01 	sts	0x01A3, r24
}

void servo6(int a)
{
	if(a==0) step16=15;
	else if(a==90) step16=19;
     918:	83 e1       	ldi	r24, 0x13	; 19
     91a:	80 93 9a 01 	sts	0x019A, r24
	else if(a==180) step16=22;
}
void servo6a(int a)
{
	if(a==0) step17=19;
	else if(a==90) step17=22;
     91e:	86 e1       	ldi	r24, 0x16	; 22
     920:	80 93 a4 01 	sts	0x01A4, r24
     924:	08 95       	ret

00000926 <right>:
		break;
	}
}
void right(int a)
{
	switch (a)
     926:	01 97       	sbiw	r24, 0x01	; 1
     928:	8d 30       	cpi	r24, 0x0D	; 13
     92a:	91 05       	cpc	r25, r1
     92c:	08 f0       	brcs	.+2      	; 0x930 <right+0xa>
     92e:	79 c0       	rjmp	.+242    	; 0xa22 <right+0xfc>
     930:	80 5b       	subi	r24, 0xB0	; 176
     932:	9f 4f       	sbci	r25, 0xFF	; 255
     934:	fc 01       	movw	r30, r24
     936:	0c 94 7a 08 	jmp	0x10f4	; 0x10f4 <__tablejump2__>
	else if(a==180) step6=18;
}

void servo3(int a)
{
	if(a==0) step7=14;
     93a:	8e e0       	ldi	r24, 0x0E	; 14
     93c:	80 93 a1 01 	sts	0x01A1, r24
	else if(a==90) step7=11;
	else if(a==180) step7=7;
}
void servo3a(int a)
{
	if(a==0) step8=10;
     940:	8a e0       	ldi	r24, 0x0A	; 10
     942:	80 93 8a 01 	sts	0x018A, r24
	else if(a==90) step8=8;
	else if(a==180) step8=4;
}
void servo3b(int a)
{
	if(a==0) step9=12;
     946:	8c e0       	ldi	r24, 0x0C	; 12
     948:	80 93 a0 01 	sts	0x01A0, r24
     94c:	08 95       	ret
}

void servo3(int a)
{
	if(a==0) step7=14;
	else if(a==90) step7=11;
     94e:	8b e0       	ldi	r24, 0x0B	; 11
     950:	80 93 a1 01 	sts	0x01A1, r24
	else if(a==180) step7=7;
}
void servo3a(int a)
{
	if(a==0) step8=10;
	else if(a==90) step8=8;
     954:	88 e0       	ldi	r24, 0x08	; 8
     956:	80 93 8a 01 	sts	0x018A, r24
     95a:	08 95       	ret
	else if(a==180) step3=19;
}

void servo2(int a)
{
	if(a==0) step4=15;
     95c:	8f e0       	ldi	r24, 0x0F	; 15
     95e:	80 93 8d 01 	sts	0x018D, r24
	else if(a==90) step4=12;
	else if(a==180) step4=8;
}
void servo2a(int a)
{
	if(a==0) step5=16;
     962:	80 e1       	ldi	r24, 0x10	; 16
     964:	80 93 81 01 	sts	0x0181, r24
	else if(a==90) step5=15;
	else if(a==180) step5=10;
}
void servo2b(int a)
{
	if(a==0) step6=12;
     968:	8c e0       	ldi	r24, 0x0C	; 12
     96a:	80 93 89 01 	sts	0x0189, r24
     96e:	08 95       	ret
}

void servo2(int a)
{
	if(a==0) step4=15;
	else if(a==90) step4=12;
     970:	8c e0       	ldi	r24, 0x0C	; 12
     972:	80 93 8d 01 	sts	0x018D, r24
	else if(a==180) step4=8;
}
void servo2a(int a)
{
	if(a==0) step5=16;
	else if(a==90) step5=15;
     976:	8f e0       	ldi	r24, 0x0F	; 15
     978:	80 93 81 01 	sts	0x0181, r24
     97c:	08 95       	ret
	else if(a==180) step15=19;
}

void servo6(int a)
{
	if(a==0) step16=15;
     97e:	8f e0       	ldi	r24, 0x0F	; 15
     980:	80 93 9a 01 	sts	0x019A, r24
	else if(a==90) step16=19;
	else if(a==180) step16=22;
}
void servo6a(int a)
{
	if(a==0) step17=19;
     984:	83 e1       	ldi	r24, 0x13	; 19
     986:	80 93 a4 01 	sts	0x01A4, r24
	else if(a==90) step17=22;
	else if(a==180) step17=25;
}
void servo6b(int a)
{
	if(a==0) step18=11;
     98a:	8b e0       	ldi	r24, 0x0B	; 11
     98c:	80 93 82 01 	sts	0x0182, r24
     990:	08 95       	ret
}

void servo6(int a)
{
	if(a==0) step16=15;
	else if(a==90) step16=19;
     992:	83 e1       	ldi	r24, 0x13	; 19
     994:	80 93 9a 01 	sts	0x019A, r24
	else if(a==180) step16=22;
}
void servo6a(int a)
{
	if(a==0) step17=19;
	else if(a==90) step17=22;
     998:	86 e1       	ldi	r24, 0x16	; 22
     99a:	80 93 a4 01 	sts	0x01A4, r24
     99e:	08 95       	ret
	else if(a==180) step12=19;
}

void servo5(int a)
{
	if(a==0) step13=16;
     9a0:	80 e1       	ldi	r24, 0x10	; 16
     9a2:	80 93 91 01 	sts	0x0191, r24
	else if(a==90) step13=20;
	else if(a==180) step13=24;
}
void servo5a(int a)
{
	if(a==0) step14=18;
     9a6:	82 e1       	ldi	r24, 0x12	; 18
     9a8:	80 93 a3 01 	sts	0x01A3, r24
	else if(a==90) step14=20;
	else if(a==180) step14=25;
}
void servo5b(int a)
{
	if(a==0) step15=13;
     9ac:	8d e0       	ldi	r24, 0x0D	; 13
     9ae:	80 93 c0 01 	sts	0x01C0, r24
     9b2:	08 95       	ret
}

void servo5(int a)
{
	if(a==0) step13=16;
	else if(a==90) step13=20;
     9b4:	84 e1       	ldi	r24, 0x14	; 20
     9b6:	80 93 91 01 	sts	0x0191, r24
	else if(a==180) step13=24;
}
void servo5a(int a)
{
	if(a==0) step14=18;
	else if(a==90) step14=20;
     9ba:	80 93 a3 01 	sts	0x01A3, r24
     9be:	08 95       	ret
int time1,time2,time3,time4;
unsigned char toggle,a;
unsigned char rec[16],r;
void servo1(int a)
{
	if(a==0) step1=11;
     9c0:	8b e0       	ldi	r24, 0x0B	; 11
     9c2:	80 93 99 01 	sts	0x0199, r24
	else if(a==90) step1=8;
	else if(a==180) step1=5;
}
void servo1a(int a)
{
	if(a==0) step2=16;
     9c6:	80 e1       	ldi	r24, 0x10	; 16
     9c8:	80 93 a2 01 	sts	0x01A2, r24
	else if(a==90) step2=14;
	else if(a==180) step2=10;
}
void servo1b(int a)
{
	if(a==0) step3=12;
     9cc:	8c e0       	ldi	r24, 0x0C	; 12
     9ce:	80 93 88 01 	sts	0x0188, r24
     9d2:	08 95       	ret
unsigned char toggle,a;
unsigned char rec[16],r;
void servo1(int a)
{
	if(a==0) step1=11;
	else if(a==90) step1=8;
     9d4:	88 e0       	ldi	r24, 0x08	; 8
     9d6:	80 93 99 01 	sts	0x0199, r24
	else if(a==180) step1=5;
}
void servo1a(int a)
{
	if(a==0) step2=16;
	else if(a==90) step2=14;
     9da:	8e e0       	ldi	r24, 0x0E	; 14
     9dc:	80 93 a2 01 	sts	0x01A2, r24
     9e0:	08 95       	ret
	else if(a==180) step9=19;
}

void servo4(int a)
{
	if(a==0) step10=13;
     9e2:	8d e0       	ldi	r24, 0x0D	; 13
     9e4:	80 93 87 01 	sts	0x0187, r24
	else if(a==90) step10=17;
	else if(a==180) step10=20;
}
void servo4a(int a)
{
	if(a==0) step11=10;
     9e8:	8a e0       	ldi	r24, 0x0A	; 10
     9ea:	80 93 92 01 	sts	0x0192, r24
	else if(a==90) step11=12;
	else if(a==180) step11=16;
}
void servo4b(int a)
{
	if(a==0) step12=11;
     9ee:	8b e0       	ldi	r24, 0x0B	; 11
     9f0:	80 93 a7 01 	sts	0x01A7, r24
     9f4:	08 95       	ret
}

void servo4(int a)
{
	if(a==0) step10=13;
	else if(a==90) step10=17;
     9f6:	81 e1       	ldi	r24, 0x11	; 17
     9f8:	80 93 87 01 	sts	0x0187, r24
	else if(a==180) step10=20;
}
void servo4a(int a)
{
	if(a==0) step11=10;
	else if(a==90) step11=12;
     9fc:	8c e0       	ldi	r24, 0x0C	; 12
     9fe:	80 93 92 01 	sts	0x0192, r24
     a02:	08 95       	ret
}
void servo3b(int a)
{
	if(a==0) step9=12;
	else if(a==90) step9=17;
	else if(a==180) step9=19;
     a04:	83 e1       	ldi	r24, 0x13	; 19
     a06:	80 93 a0 01 	sts	0x01A0, r24
}
void servo2b(int a)
{
	if(a==0) step6=12;
	else if(a==90) step6=14;
	else if(a==180) step6=18;
     a0a:	92 e1       	ldi	r25, 0x12	; 18
     a0c:	90 93 89 01 	sts	0x0189, r25
}
void servo1b(int a)
{
	if(a==0) step3=12;
	else if(a==90) step3=15;
	else if(a==180) step3=19;
     a10:	80 93 88 01 	sts	0x0188, r24
}
void servo6b(int a)
{
	if(a==0) step18=11;
	else if(a==90) step18=15;
	else if(a==180) step18=18;
     a14:	90 93 82 01 	sts	0x0182, r25
}
void servo5b(int a)
{
	if(a==0) step15=13;
	else if(a==90) step15=15;
	else if(a==180) step15=19;
     a18:	80 93 c0 01 	sts	0x01C0, r24
}
void servo4b(int a)
{
	if(a==0) step12=11;
	else if(a==90) step12=14;
	else if(a==180) step12=19;
     a1c:	80 93 a7 01 	sts	0x01A7, r24
     a20:	08 95       	ret
unsigned char toggle,a;
unsigned char rec[16],r;
void servo1(int a)
{
	if(a==0) step1=11;
	else if(a==90) step1=8;
     a22:	88 e0       	ldi	r24, 0x08	; 8
     a24:	80 93 99 01 	sts	0x0199, r24
	else if(a==180) step1=5;
}
void servo1a(int a)
{
	if(a==0) step2=16;
	else if(a==90) step2=14;
     a28:	9e e0       	ldi	r25, 0x0E	; 14
     a2a:	90 93 a2 01 	sts	0x01A2, r25
}

void servo3(int a)
{
	if(a==0) step7=14;
	else if(a==90) step7=11;
     a2e:	9b e0       	ldi	r25, 0x0B	; 11
     a30:	90 93 a1 01 	sts	0x01A1, r25
	else if(a==180) step7=7;
}
void servo3a(int a)
{
	if(a==0) step8=10;
	else if(a==90) step8=8;
     a34:	80 93 8a 01 	sts	0x018A, r24
}

void servo5(int a)
{
	if(a==0) step13=16;
	else if(a==90) step13=20;
     a38:	84 e1       	ldi	r24, 0x14	; 20
     a3a:	80 93 91 01 	sts	0x0191, r24
	else if(a==180) step13=24;
}
void servo5a(int a)
{
	if(a==0) step14=18;
	else if(a==90) step14=20;
     a3e:	80 93 a3 01 	sts	0x01A3, r24
}

void servo2(int a)
{
	if(a==0) step4=15;
	else if(a==90) step4=12;
     a42:	8c e0       	ldi	r24, 0x0C	; 12
     a44:	80 93 8d 01 	sts	0x018D, r24
	else if(a==180) step4=8;
}
void servo2a(int a)
{
	if(a==0) step5=16;
	else if(a==90) step5=15;
     a48:	9f e0       	ldi	r25, 0x0F	; 15
     a4a:	90 93 81 01 	sts	0x0181, r25
}

void servo4(int a)
{
	if(a==0) step10=13;
	else if(a==90) step10=17;
     a4e:	91 e1       	ldi	r25, 0x11	; 17
     a50:	90 93 87 01 	sts	0x0187, r25
	else if(a==180) step10=20;
}
void servo4a(int a)
{
	if(a==0) step11=10;
	else if(a==90) step11=12;
     a54:	80 93 92 01 	sts	0x0192, r24
}

void servo6(int a)
{
	if(a==0) step16=15;
	else if(a==90) step16=19;
     a58:	83 e1       	ldi	r24, 0x13	; 19
     a5a:	80 93 9a 01 	sts	0x019A, r24
	else if(a==180) step16=22;
}
void servo6a(int a)
{
	if(a==0) step17=19;
	else if(a==90) step17=22;
     a5e:	86 e1       	ldi	r24, 0x16	; 22
     a60:	80 93 a4 01 	sts	0x01A4, r24
     a64:	08 95       	ret

00000a66 <left>:
		break;
	}
}
void left(int a)
{
	switch (a)
     a66:	01 97       	sbiw	r24, 0x01	; 1
     a68:	8d 30       	cpi	r24, 0x0D	; 13
     a6a:	91 05       	cpc	r25, r1
     a6c:	08 f0       	brcs	.+2      	; 0xa70 <left+0xa>
     a6e:	7a c0       	rjmp	.+244    	; 0xb64 <left+0xfe>
     a70:	83 5a       	subi	r24, 0xA3	; 163
     a72:	9f 4f       	sbci	r25, 0xFF	; 255
     a74:	fc 01       	movw	r30, r24
     a76:	0c 94 7a 08 	jmp	0x10f4	; 0x10f4 <__tablejump2__>
	else if(a==180) step6=18;
}

void servo3(int a)
{
	if(a==0) step7=14;
     a7a:	8e e0       	ldi	r24, 0x0E	; 14
     a7c:	80 93 a1 01 	sts	0x01A1, r24
	else if(a==90) step7=11;
	else if(a==180) step7=7;
}
void servo3a(int a)
{
	if(a==0) step8=10;
     a80:	8a e0       	ldi	r24, 0x0A	; 10
     a82:	80 93 8a 01 	sts	0x018A, r24
}
void servo3b(int a)
{
	if(a==0) step9=12;
	else if(a==90) step9=17;
	else if(a==180) step9=19;
     a86:	83 e1       	ldi	r24, 0x13	; 19
     a88:	80 93 a0 01 	sts	0x01A0, r24
     a8c:	08 95       	ret
}

void servo3(int a)
{
	if(a==0) step7=14;
	else if(a==90) step7=11;
     a8e:	8b e0       	ldi	r24, 0x0B	; 11
     a90:	80 93 a1 01 	sts	0x01A1, r24
	else if(a==180) step7=7;
}
void servo3a(int a)
{
	if(a==0) step8=10;
	else if(a==90) step8=8;
     a94:	88 e0       	ldi	r24, 0x08	; 8
     a96:	80 93 8a 01 	sts	0x018A, r24
     a9a:	08 95       	ret
	else if(a==180) step3=19;
}

void servo2(int a)
{
	if(a==0) step4=15;
     a9c:	8f e0       	ldi	r24, 0x0F	; 15
     a9e:	80 93 8d 01 	sts	0x018D, r24
	else if(a==90) step4=12;
	else if(a==180) step4=8;
}
void servo2a(int a)
{
	if(a==0) step5=16;
     aa2:	80 e1       	ldi	r24, 0x10	; 16
     aa4:	80 93 81 01 	sts	0x0181, r24
}
void servo2b(int a)
{
	if(a==0) step6=12;
	else if(a==90) step6=14;
	else if(a==180) step6=18;
     aa8:	82 e1       	ldi	r24, 0x12	; 18
     aaa:	80 93 89 01 	sts	0x0189, r24
     aae:	08 95       	ret
}

void servo2(int a)
{
	if(a==0) step4=15;
	else if(a==90) step4=12;
     ab0:	8c e0       	ldi	r24, 0x0C	; 12
     ab2:	80 93 8d 01 	sts	0x018D, r24
	else if(a==180) step4=8;
}
void servo2a(int a)
{
	if(a==0) step5=16;
	else if(a==90) step5=15;
     ab6:	8f e0       	ldi	r24, 0x0F	; 15
     ab8:	80 93 81 01 	sts	0x0181, r24
     abc:	08 95       	ret
	else if(a==180) step15=19;
}

void servo6(int a)
{
	if(a==0) step16=15;
     abe:	8f e0       	ldi	r24, 0x0F	; 15
     ac0:	80 93 9a 01 	sts	0x019A, r24
	else if(a==90) step16=19;
	else if(a==180) step16=22;
}
void servo6a(int a)
{
	if(a==0) step17=19;
     ac4:	83 e1       	ldi	r24, 0x13	; 19
     ac6:	80 93 a4 01 	sts	0x01A4, r24
}
void servo6b(int a)
{
	if(a==0) step18=11;
	else if(a==90) step18=15;
	else if(a==180) step18=18;
     aca:	82 e1       	ldi	r24, 0x12	; 18
     acc:	80 93 82 01 	sts	0x0182, r24
     ad0:	08 95       	ret
}

void servo6(int a)
{
	if(a==0) step16=15;
	else if(a==90) step16=19;
     ad2:	83 e1       	ldi	r24, 0x13	; 19
     ad4:	80 93 9a 01 	sts	0x019A, r24
	else if(a==180) step16=22;
}
void servo6a(int a)
{
	if(a==0) step17=19;
	else if(a==90) step17=22;
     ad8:	86 e1       	ldi	r24, 0x16	; 22
     ada:	80 93 a4 01 	sts	0x01A4, r24
     ade:	08 95       	ret
	else if(a==180) step12=19;
}

void servo5(int a)
{
	if(a==0) step13=16;
     ae0:	80 e1       	ldi	r24, 0x10	; 16
     ae2:	80 93 91 01 	sts	0x0191, r24
	else if(a==90) step13=20;
	else if(a==180) step13=24;
}
void servo5a(int a)
{
	if(a==0) step14=18;
     ae6:	82 e1       	ldi	r24, 0x12	; 18
     ae8:	80 93 a3 01 	sts	0x01A3, r24
}
void servo5b(int a)
{
	if(a==0) step15=13;
	else if(a==90) step15=15;
	else if(a==180) step15=19;
     aec:	83 e1       	ldi	r24, 0x13	; 19
     aee:	80 93 c0 01 	sts	0x01C0, r24
     af2:	08 95       	ret
}

void servo5(int a)
{
	if(a==0) step13=16;
	else if(a==90) step13=20;
     af4:	84 e1       	ldi	r24, 0x14	; 20
     af6:	80 93 91 01 	sts	0x0191, r24
	else if(a==180) step13=24;
}
void servo5a(int a)
{
	if(a==0) step14=18;
	else if(a==90) step14=20;
     afa:	80 93 a3 01 	sts	0x01A3, r24
     afe:	08 95       	ret
int time1,time2,time3,time4;
unsigned char toggle,a;
unsigned char rec[16],r;
void servo1(int a)
{
	if(a==0) step1=11;
     b00:	8b e0       	ldi	r24, 0x0B	; 11
     b02:	80 93 99 01 	sts	0x0199, r24
	else if(a==90) step1=8;
	else if(a==180) step1=5;
}
void servo1a(int a)
{
	if(a==0) step2=16;
     b06:	80 e1       	ldi	r24, 0x10	; 16
     b08:	80 93 a2 01 	sts	0x01A2, r24
}
void servo1b(int a)
{
	if(a==0) step3=12;
	else if(a==90) step3=15;
	else if(a==180) step3=19;
     b0c:	83 e1       	ldi	r24, 0x13	; 19
     b0e:	80 93 88 01 	sts	0x0188, r24
     b12:	08 95       	ret
unsigned char toggle,a;
unsigned char rec[16],r;
void servo1(int a)
{
	if(a==0) step1=11;
	else if(a==90) step1=8;
     b14:	88 e0       	ldi	r24, 0x08	; 8
     b16:	80 93 99 01 	sts	0x0199, r24
	else if(a==180) step1=5;
}
void servo1a(int a)
{
	if(a==0) step2=16;
	else if(a==90) step2=14;
     b1a:	8e e0       	ldi	r24, 0x0E	; 14
     b1c:	80 93 a2 01 	sts	0x01A2, r24
     b20:	08 95       	ret
	else if(a==180) step9=19;
}

void servo4(int a)
{
	if(a==0) step10=13;
     b22:	8d e0       	ldi	r24, 0x0D	; 13
     b24:	80 93 87 01 	sts	0x0187, r24
	else if(a==90) step10=17;
	else if(a==180) step10=20;
}
void servo4a(int a)
{
	if(a==0) step11=10;
     b28:	8a e0       	ldi	r24, 0x0A	; 10
     b2a:	80 93 92 01 	sts	0x0192, r24
}
void servo4b(int a)
{
	if(a==0) step12=11;
	else if(a==90) step12=14;
	else if(a==180) step12=19;
     b2e:	83 e1       	ldi	r24, 0x13	; 19
     b30:	80 93 a7 01 	sts	0x01A7, r24
     b34:	08 95       	ret
}

void servo4(int a)
{
	if(a==0) step10=13;
	else if(a==90) step10=17;
     b36:	81 e1       	ldi	r24, 0x11	; 17
     b38:	80 93 87 01 	sts	0x0187, r24
	else if(a==180) step10=20;
}
void servo4a(int a)
{
	if(a==0) step11=10;
	else if(a==90) step11=12;
     b3c:	8c e0       	ldi	r24, 0x0C	; 12
     b3e:	80 93 92 01 	sts	0x0192, r24
     b42:	08 95       	ret
	else if(a==90) step8=8;
	else if(a==180) step8=4;
}
void servo3b(int a)
{
	if(a==0) step9=12;
     b44:	8c e0       	ldi	r24, 0x0C	; 12
     b46:	80 93 a0 01 	sts	0x01A0, r24
	else if(a==90) step5=15;
	else if(a==180) step5=10;
}
void servo2b(int a)
{
	if(a==0) step6=12;
     b4a:	80 93 89 01 	sts	0x0189, r24
	else if(a==90) step2=14;
	else if(a==180) step2=10;
}
void servo1b(int a)
{
	if(a==0) step3=12;
     b4e:	80 93 88 01 	sts	0x0188, r24
	else if(a==90) step17=22;
	else if(a==180) step17=25;
}
void servo6b(int a)
{
	if(a==0) step18=11;
     b52:	8b e0       	ldi	r24, 0x0B	; 11
     b54:	80 93 82 01 	sts	0x0182, r24
	else if(a==90) step14=20;
	else if(a==180) step14=25;
}
void servo5b(int a)
{
	if(a==0) step15=13;
     b58:	9d e0       	ldi	r25, 0x0D	; 13
     b5a:	90 93 c0 01 	sts	0x01C0, r25
	else if(a==90) step11=12;
	else if(a==180) step11=16;
}
void servo4b(int a)
{
	if(a==0) step12=11;
     b5e:	80 93 a7 01 	sts	0x01A7, r24
     b62:	08 95       	ret
unsigned char toggle,a;
unsigned char rec[16],r;
void servo1(int a)
{
	if(a==0) step1=11;
	else if(a==90) step1=8;
     b64:	88 e0       	ldi	r24, 0x08	; 8
     b66:	80 93 99 01 	sts	0x0199, r24
	else if(a==180) step1=5;
}
void servo1a(int a)
{
	if(a==0) step2=16;
	else if(a==90) step2=14;
     b6a:	9e e0       	ldi	r25, 0x0E	; 14
     b6c:	90 93 a2 01 	sts	0x01A2, r25
}

void servo3(int a)
{
	if(a==0) step7=14;
	else if(a==90) step7=11;
     b70:	9b e0       	ldi	r25, 0x0B	; 11
     b72:	90 93 a1 01 	sts	0x01A1, r25
	else if(a==180) step7=7;
}
void servo3a(int a)
{
	if(a==0) step8=10;
	else if(a==90) step8=8;
     b76:	80 93 8a 01 	sts	0x018A, r24
}

void servo5(int a)
{
	if(a==0) step13=16;
	else if(a==90) step13=20;
     b7a:	84 e1       	ldi	r24, 0x14	; 20
     b7c:	80 93 91 01 	sts	0x0191, r24
	else if(a==180) step13=24;
}
void servo5a(int a)
{
	if(a==0) step14=18;
	else if(a==90) step14=20;
     b80:	80 93 a3 01 	sts	0x01A3, r24
}

void servo2(int a)
{
	if(a==0) step4=15;
	else if(a==90) step4=12;
     b84:	8c e0       	ldi	r24, 0x0C	; 12
     b86:	80 93 8d 01 	sts	0x018D, r24
	else if(a==180) step4=8;
}
void servo2a(int a)
{
	if(a==0) step5=16;
	else if(a==90) step5=15;
     b8a:	9f e0       	ldi	r25, 0x0F	; 15
     b8c:	90 93 81 01 	sts	0x0181, r25
}

void servo4(int a)
{
	if(a==0) step10=13;
	else if(a==90) step10=17;
     b90:	91 e1       	ldi	r25, 0x11	; 17
     b92:	90 93 87 01 	sts	0x0187, r25
	else if(a==180) step10=20;
}
void servo4a(int a)
{
	if(a==0) step11=10;
	else if(a==90) step11=12;
     b96:	80 93 92 01 	sts	0x0192, r24
}

void servo6(int a)
{
	if(a==0) step16=15;
	else if(a==90) step16=19;
     b9a:	83 e1       	ldi	r24, 0x13	; 19
     b9c:	80 93 9a 01 	sts	0x019A, r24
	else if(a==180) step16=22;
}
void servo6a(int a)
{
	if(a==0) step17=19;
	else if(a==90) step17=22;
     ba0:	86 e1       	ldi	r24, 0x16	; 22
     ba2:	80 93 a4 01 	sts	0x01A4, r24
     ba6:	08 95       	ret

00000ba8 <stop1>:
	}
}

void stop1(int a)
{
	switch (a)
     ba8:	01 97       	sbiw	r24, 0x01	; 1
     baa:	8c 30       	cpi	r24, 0x0C	; 12
     bac:	91 05       	cpc	r25, r1
     bae:	08 f0       	brcs	.+2      	; 0xbb2 <stop1+0xa>
     bb0:	6a c0       	rjmp	.+212    	; 0xc86 <stop1+0xde>
     bb2:	86 59       	subi	r24, 0x96	; 150
     bb4:	9f 4f       	sbci	r25, 0xFF	; 255
     bb6:	fc 01       	movw	r30, r24
     bb8:	0c 94 7a 08 	jmp	0x10f4	; 0x10f4 <__tablejump2__>
int time1,time2,time3,time4;
unsigned char toggle,a;
unsigned char rec[16],r;
void servo1(int a)
{
	if(a==0) step1=11;
     bbc:	8b e0       	ldi	r24, 0x0B	; 11
     bbe:	80 93 99 01 	sts	0x0199, r24
	else if(a==90) step1=8;
	else if(a==180) step1=5;
}
void servo1a(int a)
{
	if(a==0) step2=16;
     bc2:	80 e1       	ldi	r24, 0x10	; 16
     bc4:	80 93 a2 01 	sts	0x01A2, r24
	else if(a==90) step2=14;
	else if(a==180) step2=10;
}
void servo1b(int a)
{
	if(a==0) step3=12;
     bc8:	8c e0       	ldi	r24, 0x0C	; 12
     bca:	80 93 88 01 	sts	0x0188, r24
     bce:	08 95       	ret
unsigned char toggle,a;
unsigned char rec[16],r;
void servo1(int a)
{
	if(a==0) step1=11;
	else if(a==90) step1=8;
     bd0:	88 e0       	ldi	r24, 0x08	; 8
     bd2:	80 93 99 01 	sts	0x0199, r24
	else if(a==180) step1=5;
}
void servo1a(int a)
{
	if(a==0) step2=16;
	else if(a==90) step2=14;
     bd6:	8e e0       	ldi	r24, 0x0E	; 14
     bd8:	80 93 a2 01 	sts	0x01A2, r24
     bdc:	08 95       	ret
	else if(a==180) step3=19;
}

void servo2(int a)
{
	if(a==0) step4=15;
     bde:	8f e0       	ldi	r24, 0x0F	; 15
     be0:	80 93 8d 01 	sts	0x018D, r24
	else if(a==90) step4=12;
	else if(a==180) step4=8;
}
void servo2a(int a)
{
	if(a==0) step5=16;
     be4:	80 e1       	ldi	r24, 0x10	; 16
     be6:	80 93 81 01 	sts	0x0181, r24
	else if(a==180) step5=10;
}
void servo2b(int a)
{
	if(a==0) step6=12;
	else if(a==90) step6=14;
     bea:	8e e0       	ldi	r24, 0x0E	; 14
     bec:	80 93 89 01 	sts	0x0189, r24
     bf0:	08 95       	ret
}

void servo2(int a)
{
	if(a==0) step4=15;
	else if(a==90) step4=12;
     bf2:	8c e0       	ldi	r24, 0x0C	; 12
     bf4:	80 93 8d 01 	sts	0x018D, r24
	else if(a==180) step4=8;
}
void servo2a(int a)
{
	if(a==0) step5=16;
	else if(a==90) step5=15;
     bf8:	8f e0       	ldi	r24, 0x0F	; 15
     bfa:	80 93 81 01 	sts	0x0181, r24
     bfe:	08 95       	ret
	else if(a==180) step6=18;
}

void servo3(int a)
{
	if(a==0) step7=14;
     c00:	8e e0       	ldi	r24, 0x0E	; 14
     c02:	80 93 a1 01 	sts	0x01A1, r24
	else if(a==90) step7=11;
	else if(a==180) step7=7;
}
void servo3a(int a)
{
	if(a==0) step8=10;
     c06:	8a e0       	ldi	r24, 0x0A	; 10
     c08:	80 93 8a 01 	sts	0x018A, r24
}
void servo3b(int a)
{
	if(a==0) step9=12;
	else if(a==90) step9=17;
	else if(a==180) step9=19;
     c0c:	83 e1       	ldi	r24, 0x13	; 19
     c0e:	80 93 a0 01 	sts	0x01A0, r24
     c12:	08 95       	ret
}

void servo3(int a)
{
	if(a==0) step7=14;
	else if(a==90) step7=11;
     c14:	8b e0       	ldi	r24, 0x0B	; 11
     c16:	80 93 a1 01 	sts	0x01A1, r24
	else if(a==180) step7=7;
}
void servo3a(int a)
{
	if(a==0) step8=10;
	else if(a==90) step8=8;
     c1a:	88 e0       	ldi	r24, 0x08	; 8
     c1c:	80 93 8a 01 	sts	0x018A, r24
     c20:	08 95       	ret
	else if(a==180) step9=19;
}

void servo4(int a)
{
	if(a==0) step10=13;
     c22:	8d e0       	ldi	r24, 0x0D	; 13
     c24:	80 93 87 01 	sts	0x0187, r24
	else if(a==90) step10=17;
	else if(a==180) step10=20;
}
void servo4a(int a)
{
	if(a==0) step11=10;
     c28:	8a e0       	ldi	r24, 0x0A	; 10
     c2a:	80 93 92 01 	sts	0x0192, r24
	else if(a==90) step11=12;
	else if(a==180) step11=16;
}
void servo4b(int a)
{
	if(a==0) step12=11;
     c2e:	8b e0       	ldi	r24, 0x0B	; 11
     c30:	80 93 a7 01 	sts	0x01A7, r24
     c34:	08 95       	ret
}

void servo4(int a)
{
	if(a==0) step10=13;
	else if(a==90) step10=17;
     c36:	81 e1       	ldi	r24, 0x11	; 17
     c38:	80 93 87 01 	sts	0x0187, r24
	else if(a==180) step10=20;
}
void servo4a(int a)
{
	if(a==0) step11=10;
	else if(a==90) step11=12;
     c3c:	8c e0       	ldi	r24, 0x0C	; 12
     c3e:	80 93 92 01 	sts	0x0192, r24
     c42:	08 95       	ret
	else if(a==180) step12=19;
}

void servo5(int a)
{
	if(a==0) step13=16;
     c44:	80 e1       	ldi	r24, 0x10	; 16
     c46:	80 93 91 01 	sts	0x0191, r24
	else if(a==90) step13=20;
	else if(a==180) step13=24;
}
void servo5a(int a)
{
	if(a==0) step14=18;
     c4a:	82 e1       	ldi	r24, 0x12	; 18
     c4c:	80 93 a3 01 	sts	0x01A3, r24
	else if(a==180) step14=25;
}
void servo5b(int a)
{
	if(a==0) step15=13;
	else if(a==90) step15=15;
     c50:	8f e0       	ldi	r24, 0x0F	; 15
     c52:	80 93 c0 01 	sts	0x01C0, r24
     c56:	08 95       	ret
}

void servo5(int a)
{
	if(a==0) step13=16;
	else if(a==90) step13=20;
     c58:	84 e1       	ldi	r24, 0x14	; 20
     c5a:	80 93 91 01 	sts	0x0191, r24
	else if(a==180) step13=24;
}
void servo5a(int a)
{
	if(a==0) step14=18;
	else if(a==90) step14=20;
     c5e:	80 93 a3 01 	sts	0x01A3, r24
     c62:	08 95       	ret
	else if(a==180) step15=19;
}

void servo6(int a)
{
	if(a==0) step16=15;
     c64:	8f e0       	ldi	r24, 0x0F	; 15
     c66:	80 93 9a 01 	sts	0x019A, r24
	else if(a==90) step16=19;
	else if(a==180) step16=22;
}
void servo6a(int a)
{
	if(a==0) step17=19;
     c6a:	83 e1       	ldi	r24, 0x13	; 19
     c6c:	80 93 a4 01 	sts	0x01A4, r24
}
void servo6b(int a)
{
	if(a==0) step18=11;
	else if(a==90) step18=15;
	else if(a==180) step18=18;
     c70:	82 e1       	ldi	r24, 0x12	; 18
     c72:	80 93 82 01 	sts	0x0182, r24
     c76:	08 95       	ret
}

void servo6(int a)
{
	if(a==0) step16=15;
	else if(a==90) step16=19;
     c78:	83 e1       	ldi	r24, 0x13	; 19
     c7a:	80 93 9a 01 	sts	0x019A, r24
	else if(a==180) step16=22;
}
void servo6a(int a)
{
	if(a==0) step17=19;
	else if(a==90) step17=22;
     c7e:	86 e1       	ldi	r24, 0x16	; 22
     c80:	80 93 a4 01 	sts	0x01A4, r24
     c84:	08 95       	ret
unsigned char toggle,a;
unsigned char rec[16],r;
void servo1(int a)
{
	if(a==0) step1=11;
	else if(a==90) step1=8;
     c86:	88 e0       	ldi	r24, 0x08	; 8
     c88:	80 93 99 01 	sts	0x0199, r24
	else if(a==180) step1=5;
}
void servo1a(int a)
{
	if(a==0) step2=16;
	else if(a==90) step2=14;
     c8c:	9e e0       	ldi	r25, 0x0E	; 14
     c8e:	90 93 a2 01 	sts	0x01A2, r25
}

void servo3(int a)
{
	if(a==0) step7=14;
	else if(a==90) step7=11;
     c92:	9b e0       	ldi	r25, 0x0B	; 11
     c94:	90 93 a1 01 	sts	0x01A1, r25
	else if(a==180) step7=7;
}
void servo3a(int a)
{
	if(a==0) step8=10;
	else if(a==90) step8=8;
     c98:	80 93 8a 01 	sts	0x018A, r24
}

void servo5(int a)
{
	if(a==0) step13=16;
	else if(a==90) step13=20;
     c9c:	84 e1       	ldi	r24, 0x14	; 20
     c9e:	80 93 91 01 	sts	0x0191, r24
	else if(a==180) step13=24;
}
void servo5a(int a)
{
	if(a==0) step14=18;
	else if(a==90) step14=20;
     ca2:	80 93 a3 01 	sts	0x01A3, r24
}

void servo2(int a)
{
	if(a==0) step4=15;
	else if(a==90) step4=12;
     ca6:	8c e0       	ldi	r24, 0x0C	; 12
     ca8:	80 93 8d 01 	sts	0x018D, r24
	else if(a==180) step4=8;
}
void servo2a(int a)
{
	if(a==0) step5=16;
	else if(a==90) step5=15;
     cac:	9f e0       	ldi	r25, 0x0F	; 15
     cae:	90 93 81 01 	sts	0x0181, r25
}

void servo4(int a)
{
	if(a==0) step10=13;
	else if(a==90) step10=17;
     cb2:	91 e1       	ldi	r25, 0x11	; 17
     cb4:	90 93 87 01 	sts	0x0187, r25
	else if(a==180) step10=20;
}
void servo4a(int a)
{
	if(a==0) step11=10;
	else if(a==90) step11=12;
     cb8:	80 93 92 01 	sts	0x0192, r24
}

void servo6(int a)
{
	if(a==0) step16=15;
	else if(a==90) step16=19;
     cbc:	83 e1       	ldi	r24, 0x13	; 19
     cbe:	80 93 9a 01 	sts	0x019A, r24
	else if(a==180) step16=22;
}
void servo6a(int a)
{
	if(a==0) step17=19;
	else if(a==90) step17=22;
     cc2:	86 e1       	ldi	r24, 0x16	; 22
     cc4:	80 93 a4 01 	sts	0x01A4, r24
     cc8:	08 95       	ret

00000cca <init>:
}


void init()
{
	DDRB = 0xff;
     cca:	8f ef       	ldi	r24, 0xFF	; 255
     ccc:	87 bb       	out	0x17, r24	; 23
	PORTB = 0xff; 
     cce:	88 bb       	out	0x18, r24	; 24
	
	DDRC = 0x0f;
     cd0:	9f e0       	ldi	r25, 0x0F	; 15
     cd2:	94 bb       	out	0x14, r25	; 20
	PORTC= 0xff;
     cd4:	85 bb       	out	0x15, r24	; 21
	
	DDRD = 0xfe;
     cd6:	9e ef       	ldi	r25, 0xFE	; 254
     cd8:	91 bb       	out	0x11, r25	; 17
	PORTD = 0xff;
     cda:	82 bb       	out	0x12, r24	; 18
	
	cli();
     cdc:	f8 94       	cli
	Lcd4_Init();
     cde:	0e 94 ca 00 	call	0x194	; 0x194 <Lcd4_Init>
	timer_init();
     ce2:	0e 94 43 01 	call	0x286	; 0x286 <timer_init>
	Serial0_Init(9600);
     ce6:	80 e8       	ldi	r24, 0x80	; 128
     ce8:	95 e2       	ldi	r25, 0x25	; 37
     cea:	0e 94 61 02 	call	0x4c2	; 0x4c2 <Serial0_Init>
	Serial0_Conout("WORKING\r",8);
     cee:	68 e0       	ldi	r22, 0x08	; 8
     cf0:	81 e0       	ldi	r24, 0x01	; 1
     cf2:	91 e0       	ldi	r25, 0x01	; 1
     cf4:	0e 94 91 02 	call	0x522	; 0x522 <Serial0_Conout>
	Receive0(1);
     cf8:	81 e0       	ldi	r24, 0x01	; 1
     cfa:	0e 94 a6 02 	call	0x54c	; 0x54c <Receive0>
	

	Lcd4_Display(0x80," HEXAPOD ROBOT  ",16);
     cfe:	40 e1       	ldi	r20, 0x10	; 16
     d00:	50 e0       	ldi	r21, 0x00	; 0
     d02:	6a e0       	ldi	r22, 0x0A	; 10
     d04:	71 e0       	ldi	r23, 0x01	; 1
     d06:	80 e8       	ldi	r24, 0x80	; 128
     d08:	0e 94 20 01 	call	0x240	; 0x240 <Lcd4_Display>

	
	sei();	
     d0c:	78 94       	sei
     d0e:	08 95       	ret

00000d10 <main>:
unsigned char forw,rev,lef,rig,stop=1;
char one,two,three,four;

int main()
{
	init();
     d10:	0e 94 65 06 	call	0xcca	; 0xcca <init>
		}
		//Lcd4_Decimal3(0xc0,r);
		if(flag==1)
		{
			flag=0;
			if(rec[1]=='1')
     d14:	ce ea       	ldi	r28, 0xAE	; 174
     d16:	d1 e0       	ldi	r29, 0x01	; 1
		{
			if(two==0)
			{
				Serial0_Conout("*2\r",3);
				Lcd4_Write(0xc0,' ');
				one=0;two=1;
     d18:	11 e0       	ldi	r17, 0x01	; 1
				}
				else
				{
					forward(toggle);
					toggle++;
					if(toggle>12) {toggle=7;}
     d1a:	07 e0       	ldi	r16, 0x07	; 7
	init();


    while(1)
    {
		if(fire==0) 
     d1c:	9c 9b       	sbis	0x13, 4	; 19
     d1e:	12 c0       	rjmp	.+36     	; 0xd44 <main+0x34>
		{
			if(one==0)
     d20:	80 91 a8 01 	lds	r24, 0x01A8
     d24:	81 11       	cpse	r24, r1
     d26:	1f c0       	rjmp	.+62     	; 0xd66 <main+0x56>
			{
				Serial0_Conout("*1\r",3);
     d28:	63 e0       	ldi	r22, 0x03	; 3
     d2a:	8b e1       	ldi	r24, 0x1B	; 27
     d2c:	91 e0       	ldi	r25, 0x01	; 1
     d2e:	0e 94 91 02 	call	0x522	; 0x522 <Serial0_Conout>
				Lcd4_Write(0xc0,'F');
     d32:	66 e4       	ldi	r22, 0x46	; 70
     d34:	80 ec       	ldi	r24, 0xC0	; 192
     d36:	0e 94 df 00 	call	0x1be	; 0x1be <Lcd4_Write>
				one=1;two=0;
     d3a:	10 93 a8 01 	sts	0x01A8, r17
     d3e:	10 92 86 01 	sts	0x0186, r1
     d42:	11 c0       	rjmp	.+34     	; 0xd66 <main+0x56>
			}
		}
		else 
		{
			if(two==0)
     d44:	80 91 86 01 	lds	r24, 0x0186
     d48:	81 11       	cpse	r24, r1
     d4a:	0d c0       	rjmp	.+26     	; 0xd66 <main+0x56>
			{
				Serial0_Conout("*2\r",3);
     d4c:	63 e0       	ldi	r22, 0x03	; 3
     d4e:	8f e1       	ldi	r24, 0x1F	; 31
     d50:	91 e0       	ldi	r25, 0x01	; 1
     d52:	0e 94 91 02 	call	0x522	; 0x522 <Serial0_Conout>
				Lcd4_Write(0xc0,' ');
     d56:	60 e2       	ldi	r22, 0x20	; 32
     d58:	80 ec       	ldi	r24, 0xC0	; 192
     d5a:	0e 94 df 00 	call	0x1be	; 0x1be <Lcd4_Write>
				one=0;two=1;
     d5e:	10 92 a8 01 	sts	0x01A8, r1
     d62:	10 93 86 01 	sts	0x0186, r17
			}
		}
		
		if(bomb==1)
     d66:	9d 99       	sbic	0x13, 5	; 19
     d68:	12 c0       	rjmp	.+36     	; 0xd8e <main+0x7e>
		{
			if(three==0)
     d6a:	80 91 bf 01 	lds	r24, 0x01BF
     d6e:	81 11       	cpse	r24, r1
     d70:	1f c0       	rjmp	.+62     	; 0xdb0 <main+0xa0>
			{
				Serial0_Conout("*3\r",3);
     d72:	63 e0       	ldi	r22, 0x03	; 3
     d74:	83 e2       	ldi	r24, 0x23	; 35
     d76:	91 e0       	ldi	r25, 0x01	; 1
     d78:	0e 94 91 02 	call	0x522	; 0x522 <Serial0_Conout>
				Lcd4_Write(0xc2,'B');
     d7c:	62 e4       	ldi	r22, 0x42	; 66
     d7e:	82 ec       	ldi	r24, 0xC2	; 194
     d80:	0e 94 df 00 	call	0x1be	; 0x1be <Lcd4_Write>
				three=1;four=0;
     d84:	10 93 bf 01 	sts	0x01BF, r17
     d88:	10 92 c1 01 	sts	0x01C1, r1
     d8c:	11 c0       	rjmp	.+34     	; 0xdb0 <main+0xa0>
			}
		}
		else
		{
			if(four==0)
     d8e:	80 91 c1 01 	lds	r24, 0x01C1
     d92:	81 11       	cpse	r24, r1
     d94:	0d c0       	rjmp	.+26     	; 0xdb0 <main+0xa0>
			{
				Serial0_Conout("*4\r",3);
     d96:	63 e0       	ldi	r22, 0x03	; 3
     d98:	87 e2       	ldi	r24, 0x27	; 39
     d9a:	91 e0       	ldi	r25, 0x01	; 1
     d9c:	0e 94 91 02 	call	0x522	; 0x522 <Serial0_Conout>
				Lcd4_Write(0xc2,' ');
     da0:	60 e2       	ldi	r22, 0x20	; 32
     da2:	82 ec       	ldi	r24, 0xC2	; 194
     da4:	0e 94 df 00 	call	0x1be	; 0x1be <Lcd4_Write>
				three=0;four=1;
     da8:	10 92 bf 01 	sts	0x01BF, r1
     dac:	10 93 c1 01 	sts	0x01C1, r17
			}
		}
		//Lcd4_Decimal3(0xc0,r);
		if(flag==1)
     db0:	20 91 8b 01 	lds	r18, 0x018B
     db4:	30 91 8c 01 	lds	r19, 0x018C
     db8:	21 30       	cpi	r18, 0x01	; 1
     dba:	31 05       	cpc	r19, r1
     dbc:	09 f0       	breq	.+2      	; 0xdc0 <main+0xb0>
     dbe:	7f c0       	rjmp	.+254    	; 0xebe <main+0x1ae>
		{
			flag=0;
     dc0:	10 92 8c 01 	sts	0x018C, r1
     dc4:	10 92 8b 01 	sts	0x018B, r1
			if(rec[1]=='1')
     dc8:	98 81       	ld	r25, Y
     dca:	91 33       	cpi	r25, 0x31	; 49
     dcc:	b1 f4       	brne	.+44     	; 0xdfa <main+0xea>
			{
				Lcd4_Display(0xc0,"    FORWARD     ",16);
     dce:	40 e1       	ldi	r20, 0x10	; 16
     dd0:	50 e0       	ldi	r21, 0x00	; 0
     dd2:	6b e2       	ldi	r22, 0x2B	; 43
     dd4:	71 e0       	ldi	r23, 0x01	; 1
     dd6:	80 ec       	ldi	r24, 0xC0	; 192
     dd8:	0e 94 20 01 	call	0x240	; 0x240 <Lcd4_Display>
				forw=1;rev=0;lef=0;rig=0;stop=0;toggle=0;a=0;
     ddc:	10 93 90 01 	sts	0x0190, r17
     de0:	10 92 a5 01 	sts	0x01A5, r1
     de4:	10 92 94 01 	sts	0x0194, r1
     de8:	10 92 a6 01 	sts	0x01A6, r1
     dec:	10 92 00 01 	sts	0x0100, r1
     df0:	10 92 a9 01 	sts	0x01A9, r1
     df4:	10 92 ac 01 	sts	0x01AC, r1
     df8:	5f c0       	rjmp	.+190    	; 0xeb8 <main+0x1a8>
			}
			else if(rec[1]=='2')
     dfa:	92 33       	cpi	r25, 0x32	; 50
     dfc:	b1 f4       	brne	.+44     	; 0xe2a <main+0x11a>
			{  
				Lcd4_Display(0xc0,"    REVERSE     ",16);
     dfe:	40 e1       	ldi	r20, 0x10	; 16
     e00:	50 e0       	ldi	r21, 0x00	; 0
     e02:	6c e3       	ldi	r22, 0x3C	; 60
     e04:	71 e0       	ldi	r23, 0x01	; 1
     e06:	80 ec       	ldi	r24, 0xC0	; 192
     e08:	0e 94 20 01 	call	0x240	; 0x240 <Lcd4_Display>
				forw=0;rev=1;lef=0;rig=0;stop=0;toggle=0;a=0;
     e0c:	10 92 90 01 	sts	0x0190, r1
     e10:	10 93 a5 01 	sts	0x01A5, r17
     e14:	10 92 94 01 	sts	0x0194, r1
     e18:	10 92 a6 01 	sts	0x01A6, r1
     e1c:	10 92 00 01 	sts	0x0100, r1
     e20:	10 92 a9 01 	sts	0x01A9, r1
     e24:	10 92 ac 01 	sts	0x01AC, r1
     e28:	47 c0       	rjmp	.+142    	; 0xeb8 <main+0x1a8>
			}
			else if(rec[1]=='3')
     e2a:	93 33       	cpi	r25, 0x33	; 51
     e2c:	b1 f4       	brne	.+44     	; 0xe5a <main+0x14a>
			{
				Lcd4_Display(0xc0,"       LEFT     ",16);
     e2e:	40 e1       	ldi	r20, 0x10	; 16
     e30:	50 e0       	ldi	r21, 0x00	; 0
     e32:	6d e4       	ldi	r22, 0x4D	; 77
     e34:	71 e0       	ldi	r23, 0x01	; 1
     e36:	80 ec       	ldi	r24, 0xC0	; 192
     e38:	0e 94 20 01 	call	0x240	; 0x240 <Lcd4_Display>
				forw=0;rev=0;lef=1;rig=0;stop=0;toggle=0;a=0;
     e3c:	10 92 90 01 	sts	0x0190, r1
     e40:	10 92 a5 01 	sts	0x01A5, r1
     e44:	10 93 94 01 	sts	0x0194, r17
     e48:	10 92 a6 01 	sts	0x01A6, r1
     e4c:	10 92 00 01 	sts	0x0100, r1
     e50:	10 92 a9 01 	sts	0x01A9, r1
     e54:	10 92 ac 01 	sts	0x01AC, r1
     e58:	2f c0       	rjmp	.+94     	; 0xeb8 <main+0x1a8>
			}
			else if(rec[1]=='4')
     e5a:	94 33       	cpi	r25, 0x34	; 52
     e5c:	b1 f4       	brne	.+44     	; 0xe8a <main+0x17a>
			{
				Lcd4_Display(0xc0,"       RIGHT    ",16);
     e5e:	40 e1       	ldi	r20, 0x10	; 16
     e60:	50 e0       	ldi	r21, 0x00	; 0
     e62:	6e e5       	ldi	r22, 0x5E	; 94
     e64:	71 e0       	ldi	r23, 0x01	; 1
     e66:	80 ec       	ldi	r24, 0xC0	; 192
     e68:	0e 94 20 01 	call	0x240	; 0x240 <Lcd4_Display>
				forw=0;rev=0;lef=0;rig=1;stop=0;toggle=0;a=0;
     e6c:	10 92 90 01 	sts	0x0190, r1
     e70:	10 92 a5 01 	sts	0x01A5, r1
     e74:	10 92 94 01 	sts	0x0194, r1
     e78:	10 93 a6 01 	sts	0x01A6, r17
     e7c:	10 92 00 01 	sts	0x0100, r1
     e80:	10 92 a9 01 	sts	0x01A9, r1
     e84:	10 92 ac 01 	sts	0x01AC, r1
     e88:	17 c0       	rjmp	.+46     	; 0xeb8 <main+0x1a8>
			}
			else if(rec[1]=='5')
     e8a:	95 33       	cpi	r25, 0x35	; 53
     e8c:	a9 f4       	brne	.+42     	; 0xeb8 <main+0x1a8>
			{
				Lcd4_Display(0xc0,"      STOP      ",16);
     e8e:	40 e1       	ldi	r20, 0x10	; 16
     e90:	50 e0       	ldi	r21, 0x00	; 0
     e92:	6f e6       	ldi	r22, 0x6F	; 111
     e94:	71 e0       	ldi	r23, 0x01	; 1
     e96:	80 ec       	ldi	r24, 0xC0	; 192
     e98:	0e 94 20 01 	call	0x240	; 0x240 <Lcd4_Display>
				forw=0;rev=0;lef=0;rig=0;stop=1;toggle=0;a=0;
     e9c:	10 92 90 01 	sts	0x0190, r1
     ea0:	10 92 a5 01 	sts	0x01A5, r1
     ea4:	10 92 94 01 	sts	0x0194, r1
     ea8:	10 92 a6 01 	sts	0x01A6, r1
     eac:	10 93 00 01 	sts	0x0100, r17
     eb0:	10 92 a9 01 	sts	0x01A9, r1
     eb4:	10 92 ac 01 	sts	0x01AC, r1
			}
			Receive0(1);
     eb8:	81 2f       	mov	r24, r17
     eba:	0e 94 a6 02 	call	0x54c	; 0x54c <Receive0>
		}
		
		if(dd>3000) 
     ebe:	20 91 95 01 	lds	r18, 0x0195
     ec2:	30 91 96 01 	lds	r19, 0x0196
     ec6:	29 3b       	cpi	r18, 0xB9	; 185
     ec8:	3b 40       	sbci	r19, 0x0B	; 11
     eca:	08 f4       	brcc	.+2      	; 0xece <main+0x1be>
     ecc:	27 cf       	rjmp	.-434    	; 0xd1c <main+0xc>
		{
			if(forw==1)
     ece:	80 91 90 01 	lds	r24, 0x0190
     ed2:	81 30       	cpi	r24, 0x01	; 1
     ed4:	d1 f4       	brne	.+52     	; 0xf0a <main+0x1fa>
			{
				forward(toggle);
     ed6:	80 91 a9 01 	lds	r24, 0x01A9
     eda:	90 e0       	ldi	r25, 0x00	; 0
     edc:	0e 94 b1 02 	call	0x562	; 0x562 <forward>
				toggle++;
     ee0:	80 91 a9 01 	lds	r24, 0x01A9
     ee4:	8f 5f       	subi	r24, 0xFF	; 255
				if(toggle>12) {toggle=7;all++;}
     ee6:	8d 30       	cpi	r24, 0x0D	; 13
     ee8:	18 f4       	brcc	.+6      	; 0xef0 <main+0x1e0>
		if(dd>3000) 
		{
			if(forw==1)
			{
				forward(toggle);
				toggle++;
     eea:	80 93 a9 01 	sts	0x01A9, r24
     eee:	9b c0       	rjmp	.+310    	; 0x1026 <main+0x316>
				if(toggle>12) {toggle=7;all++;}
     ef0:	00 93 a9 01 	sts	0x01A9, r16
     ef4:	20 91 8e 01 	lds	r18, 0x018E
     ef8:	30 91 8f 01 	lds	r19, 0x018F
     efc:	2f 5f       	subi	r18, 0xFF	; 255
     efe:	3f 4f       	sbci	r19, 0xFF	; 255
     f00:	30 93 8f 01 	sts	0x018F, r19
     f04:	20 93 8e 01 	sts	0x018E, r18
     f08:	8e c0       	rjmp	.+284    	; 0x1026 <main+0x316>
			}
			else if(lef==1)
     f0a:	80 91 94 01 	lds	r24, 0x0194
     f0e:	81 30       	cpi	r24, 0x01	; 1
     f10:	81 f5       	brne	.+96     	; 0xf72 <main+0x262>
			{
				if(a<4)
     f12:	80 91 ac 01 	lds	r24, 0x01AC
     f16:	84 30       	cpi	r24, 0x04	; 4
     f18:	e0 f4       	brcc	.+56     	; 0xf52 <main+0x242>
				{
					left(toggle);
     f1a:	80 91 a9 01 	lds	r24, 0x01A9
     f1e:	90 e0       	ldi	r25, 0x00	; 0
     f20:	0e 94 33 05 	call	0xa66	; 0xa66 <left>
					toggle++;
     f24:	80 91 a9 01 	lds	r24, 0x01A9
     f28:	8f 5f       	subi	r24, 0xFF	; 255
					if(toggle>13){toggle=1;a++;}
     f2a:	8e 30       	cpi	r24, 0x0E	; 14
     f2c:	18 f4       	brcc	.+6      	; 0xf34 <main+0x224>
			else if(lef==1)
			{
				if(a<4)
				{
					left(toggle);
					toggle++;
     f2e:	80 93 a9 01 	sts	0x01A9, r24
     f32:	07 c0       	rjmp	.+14     	; 0xf42 <main+0x232>
					if(toggle>13){toggle=1;a++;}
     f34:	10 93 a9 01 	sts	0x01A9, r17
     f38:	80 91 ac 01 	lds	r24, 0x01AC
     f3c:	8f 5f       	subi	r24, 0xFF	; 255
     f3e:	80 93 ac 01 	sts	0x01AC, r24
					if(a==4) toggle=0;
     f42:	80 91 ac 01 	lds	r24, 0x01AC
     f46:	84 30       	cpi	r24, 0x04	; 4
     f48:	09 f0       	breq	.+2      	; 0xf4c <main+0x23c>
     f4a:	6d c0       	rjmp	.+218    	; 0x1026 <main+0x316>
     f4c:	10 92 a9 01 	sts	0x01A9, r1
     f50:	6a c0       	rjmp	.+212    	; 0x1026 <main+0x316>
				}
				else
				{
					forward(toggle);
     f52:	80 91 a9 01 	lds	r24, 0x01A9
     f56:	90 e0       	ldi	r25, 0x00	; 0
     f58:	0e 94 b1 02 	call	0x562	; 0x562 <forward>
					toggle++;
     f5c:	80 91 a9 01 	lds	r24, 0x01A9
     f60:	8f 5f       	subi	r24, 0xFF	; 255
					if(toggle>12) {toggle=7;}
     f62:	8d 30       	cpi	r24, 0x0D	; 13
     f64:	18 f4       	brcc	.+6      	; 0xf6c <main+0x25c>
					if(a==4) toggle=0;
				}
				else
				{
					forward(toggle);
					toggle++;
     f66:	80 93 a9 01 	sts	0x01A9, r24
     f6a:	5d c0       	rjmp	.+186    	; 0x1026 <main+0x316>
					if(toggle>12) {toggle=7;}
     f6c:	00 93 a9 01 	sts	0x01A9, r16
     f70:	5a c0       	rjmp	.+180    	; 0x1026 <main+0x316>
				}
			}
			else if(rev==1)
     f72:	80 91 a5 01 	lds	r24, 0x01A5
     f76:	81 30       	cpi	r24, 0x01	; 1
     f78:	81 f4       	brne	.+32     	; 0xf9a <main+0x28a>
			{
				reverse(toggle);
     f7a:	80 91 a9 01 	lds	r24, 0x01A9
     f7e:	90 e0       	ldi	r25, 0x00	; 0
     f80:	0e 94 a2 03 	call	0x744	; 0x744 <reverse>
				toggle++;
     f84:	80 91 a9 01 	lds	r24, 0x01A9
     f88:	8f 5f       	subi	r24, 0xFF	; 255
				if(toggle>12) {toggle=7;}
     f8a:	8d 30       	cpi	r24, 0x0D	; 13
     f8c:	18 f4       	brcc	.+6      	; 0xf94 <main+0x284>
				}
			}
			else if(rev==1)
			{
				reverse(toggle);
				toggle++;
     f8e:	80 93 a9 01 	sts	0x01A9, r24
     f92:	49 c0       	rjmp	.+146    	; 0x1026 <main+0x316>
				if(toggle>12) {toggle=7;}
     f94:	00 93 a9 01 	sts	0x01A9, r16
     f98:	46 c0       	rjmp	.+140    	; 0x1026 <main+0x316>
			}
			else if(rig==1)
     f9a:	80 91 a6 01 	lds	r24, 0x01A6
     f9e:	81 30       	cpi	r24, 0x01	; 1
     fa0:	79 f5       	brne	.+94     	; 0x1000 <main+0x2f0>
			{
				if(a<4)
     fa2:	80 91 ac 01 	lds	r24, 0x01AC
     fa6:	84 30       	cpi	r24, 0x04	; 4
     fa8:	d8 f4       	brcc	.+54     	; 0xfe0 <main+0x2d0>
				{
					right(toggle);
     faa:	80 91 a9 01 	lds	r24, 0x01A9
     fae:	90 e0       	ldi	r25, 0x00	; 0
     fb0:	0e 94 93 04 	call	0x926	; 0x926 <right>
					toggle++;
     fb4:	80 91 a9 01 	lds	r24, 0x01A9
     fb8:	8f 5f       	subi	r24, 0xFF	; 255
					if(toggle>13){toggle=1;a++;}
     fba:	8e 30       	cpi	r24, 0x0E	; 14
     fbc:	18 f4       	brcc	.+6      	; 0xfc4 <main+0x2b4>
			else if(rig==1)
			{
				if(a<4)
				{
					right(toggle);
					toggle++;
     fbe:	80 93 a9 01 	sts	0x01A9, r24
     fc2:	07 c0       	rjmp	.+14     	; 0xfd2 <main+0x2c2>
					if(toggle>13){toggle=1;a++;}
     fc4:	10 93 a9 01 	sts	0x01A9, r17
     fc8:	80 91 ac 01 	lds	r24, 0x01AC
     fcc:	8f 5f       	subi	r24, 0xFF	; 255
     fce:	80 93 ac 01 	sts	0x01AC, r24
					if(a==4) toggle=0;
     fd2:	80 91 ac 01 	lds	r24, 0x01AC
     fd6:	84 30       	cpi	r24, 0x04	; 4
     fd8:	31 f5       	brne	.+76     	; 0x1026 <main+0x316>
     fda:	10 92 a9 01 	sts	0x01A9, r1
     fde:	23 c0       	rjmp	.+70     	; 0x1026 <main+0x316>
				}
				else
				{
					forward(toggle);
     fe0:	80 91 a9 01 	lds	r24, 0x01A9
     fe4:	90 e0       	ldi	r25, 0x00	; 0
     fe6:	0e 94 b1 02 	call	0x562	; 0x562 <forward>
					toggle++;
     fea:	80 91 a9 01 	lds	r24, 0x01A9
     fee:	8f 5f       	subi	r24, 0xFF	; 255
					if(toggle>12) {toggle=7;}
     ff0:	8d 30       	cpi	r24, 0x0D	; 13
     ff2:	18 f4       	brcc	.+6      	; 0xffa <main+0x2ea>
					if(a==4) toggle=0;
				}
				else
				{
					forward(toggle);
					toggle++;
     ff4:	80 93 a9 01 	sts	0x01A9, r24
     ff8:	16 c0       	rjmp	.+44     	; 0x1026 <main+0x316>
					if(toggle>12) {toggle=7;}
     ffa:	00 93 a9 01 	sts	0x01A9, r16
     ffe:	13 c0       	rjmp	.+38     	; 0x1026 <main+0x316>
				}
			}
			else if(stop==1)
    1000:	80 91 00 01 	lds	r24, 0x0100
    1004:	81 30       	cpi	r24, 0x01	; 1
    1006:	79 f4       	brne	.+30     	; 0x1026 <main+0x316>
			{
				stop1(toggle);   
    1008:	80 91 a9 01 	lds	r24, 0x01A9
    100c:	90 e0       	ldi	r25, 0x00	; 0
    100e:	0e 94 d4 05 	call	0xba8	; 0xba8 <stop1>
				toggle++;
    1012:	80 91 a9 01 	lds	r24, 0x01A9
    1016:	8f 5f       	subi	r24, 0xFF	; 255
				if(toggle>16) {toggle=0;}
    1018:	81 31       	cpi	r24, 0x11	; 17
    101a:	18 f4       	brcc	.+6      	; 0x1022 <main+0x312>
				}
			}
			else if(stop==1)
			{
				stop1(toggle);   
				toggle++;
    101c:	80 93 a9 01 	sts	0x01A9, r24
    1020:	02 c0       	rjmp	.+4      	; 0x1026 <main+0x316>
				if(toggle>16) {toggle=0;}
    1022:	10 92 a9 01 	sts	0x01A9, r1
			}
			dd=0;
    1026:	10 92 96 01 	sts	0x0196, r1
    102a:	10 92 95 01 	sts	0x0195, r1
    102e:	76 ce       	rjmp	.-788    	; 0xd1c <main+0xc>

00001030 <__vector_19>:
	Lcd4_Decimal2(0xc0,time3);
	Lcd4_Decimal2(0xca,time4);
}

ISR (USART0_RXC_vect)
{
    1030:	1f 92       	push	r1
    1032:	0f 92       	push	r0
    1034:	0f b6       	in	r0, 0x3f	; 63
    1036:	0f 92       	push	r0
    1038:	11 24       	eor	r1, r1
    103a:	2f 93       	push	r18
    103c:	3f 93       	push	r19
    103e:	4f 93       	push	r20
    1040:	5f 93       	push	r21
    1042:	6f 93       	push	r22
    1044:	7f 93       	push	r23
    1046:	8f 93       	push	r24
    1048:	9f 93       	push	r25
    104a:	af 93       	push	r26
    104c:	bf 93       	push	r27
    104e:	ef 93       	push	r30
    1050:	ff 93       	push	r31
	rec[r]=UDR0;
    1052:	80 91 93 01 	lds	r24, 0x0193
    1056:	9c b1       	in	r25, 0x0c	; 12
    1058:	e8 2f       	mov	r30, r24
    105a:	f0 e0       	ldi	r31, 0x00	; 0
    105c:	e3 55       	subi	r30, 0x53	; 83
    105e:	fe 4f       	sbci	r31, 0xFE	; 254
    1060:	90 83       	st	Z, r25
	if(rec[0]=='*') r++;
    1062:	90 91 ad 01 	lds	r25, 0x01AD
    1066:	9a 32       	cpi	r25, 0x2A	; 42
    1068:	19 f4       	brne	.+6      	; 0x1070 <__vector_19+0x40>
    106a:	8f 5f       	subi	r24, 0xFF	; 255
    106c:	80 93 93 01 	sts	0x0193, r24
	if(r>=2) {r=0;flag=1;Receive0(0);}
    1070:	80 91 93 01 	lds	r24, 0x0193
    1074:	82 30       	cpi	r24, 0x02	; 2
    1076:	58 f0       	brcs	.+22     	; 0x108e <__vector_19+0x5e>
    1078:	10 92 93 01 	sts	0x0193, r1
    107c:	81 e0       	ldi	r24, 0x01	; 1
    107e:	90 e0       	ldi	r25, 0x00	; 0
    1080:	90 93 8c 01 	sts	0x018C, r25
    1084:	80 93 8b 01 	sts	0x018B, r24
    1088:	80 e0       	ldi	r24, 0x00	; 0
    108a:	0e 94 a6 02 	call	0x54c	; 0x54c <Receive0>
    108e:	ff 91       	pop	r31
    1090:	ef 91       	pop	r30
    1092:	bf 91       	pop	r27
    1094:	af 91       	pop	r26
    1096:	9f 91       	pop	r25
    1098:	8f 91       	pop	r24
    109a:	7f 91       	pop	r23
    109c:	6f 91       	pop	r22
    109e:	5f 91       	pop	r21
    10a0:	4f 91       	pop	r20
    10a2:	3f 91       	pop	r19
    10a4:	2f 91       	pop	r18
    10a6:	0f 90       	pop	r0
    10a8:	0f be       	out	0x3f, r0	; 63
    10aa:	0f 90       	pop	r0
    10ac:	1f 90       	pop	r1
    10ae:	18 95       	reti

000010b0 <__udivmodsi4>:
    10b0:	a1 e2       	ldi	r26, 0x21	; 33
    10b2:	1a 2e       	mov	r1, r26
    10b4:	aa 1b       	sub	r26, r26
    10b6:	bb 1b       	sub	r27, r27
    10b8:	fd 01       	movw	r30, r26
    10ba:	0d c0       	rjmp	.+26     	; 0x10d6 <__udivmodsi4_ep>

000010bc <__udivmodsi4_loop>:
    10bc:	aa 1f       	adc	r26, r26
    10be:	bb 1f       	adc	r27, r27
    10c0:	ee 1f       	adc	r30, r30
    10c2:	ff 1f       	adc	r31, r31
    10c4:	a2 17       	cp	r26, r18
    10c6:	b3 07       	cpc	r27, r19
    10c8:	e4 07       	cpc	r30, r20
    10ca:	f5 07       	cpc	r31, r21
    10cc:	20 f0       	brcs	.+8      	; 0x10d6 <__udivmodsi4_ep>
    10ce:	a2 1b       	sub	r26, r18
    10d0:	b3 0b       	sbc	r27, r19
    10d2:	e4 0b       	sbc	r30, r20
    10d4:	f5 0b       	sbc	r31, r21

000010d6 <__udivmodsi4_ep>:
    10d6:	66 1f       	adc	r22, r22
    10d8:	77 1f       	adc	r23, r23
    10da:	88 1f       	adc	r24, r24
    10dc:	99 1f       	adc	r25, r25
    10de:	1a 94       	dec	r1
    10e0:	69 f7       	brne	.-38     	; 0x10bc <__udivmodsi4_loop>
    10e2:	60 95       	com	r22
    10e4:	70 95       	com	r23
    10e6:	80 95       	com	r24
    10e8:	90 95       	com	r25
    10ea:	9b 01       	movw	r18, r22
    10ec:	ac 01       	movw	r20, r24
    10ee:	bd 01       	movw	r22, r26
    10f0:	cf 01       	movw	r24, r30
    10f2:	08 95       	ret

000010f4 <__tablejump2__>:
    10f4:	ee 0f       	add	r30, r30
    10f6:	ff 1f       	adc	r31, r31

000010f8 <__tablejump__>:
    10f8:	05 90       	lpm	r0, Z+
    10fa:	f4 91       	lpm	r31, Z
    10fc:	e0 2d       	mov	r30, r0
    10fe:	09 94       	ijmp

00001100 <_exit>:
    1100:	f8 94       	cli

00001102 <__stop_program>:
    1102:	ff cf       	rjmp	.-2      	; 0x1102 <__stop_program>
